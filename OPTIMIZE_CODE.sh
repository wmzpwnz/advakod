#!/bin/bash

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ - —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π
echo "üßπ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ö–û–î–ê - –£–î–ê–õ–ï–ù–ò–ï –ù–ï–ò–°–ü–û–õ–¨–ó–£–ï–ú–´–• –ò–ú–ü–û–†–¢–û–í"
echo "====================================================="

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Chat.js - —É–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ frontend/src/pages/Chat.js..."

# –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é Chat.js
cat > /root/advakod/frontend/src/pages/Chat.js << 'EOF'
import React, { useState, useEffect, useRef, useCallback } from 'react';
import { Send, Paperclip, Bot, User, Wifi, WifiOff, File, X, Lightbulb, Search, Mic, Square, Settings } from 'lucide-react';
import { useChatWebSocket } from '../hooks/useChatWebSocket';
import {
  LazyFileUpload,
  LazyQuestionTemplates,
  LazyMessageSearch
} from '../components/LazyComponent';
import VoiceRecorder from '../components/VoiceRecorder';
import VoicePlayer from '../components/VoicePlayer';
import ChatHistory from '../components/ChatHistory';
import EnhancedResponse from '../components/EnhancedResponse';
import RAGSettings from '../components/RAGSettings';
import FeedbackButtons from '../components/FeedbackButtons';
import axios from 'axios';
import { getApiUrl } from '../config/api';

const Chat = () => {
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [sessionId, setSessionId] = useState(null);
  const [attachedFiles, setAttachedFiles] = useState([]);
  const [showFileUpload, setShowFileUpload] = useState(false);
  const [showTemplates, setShowTemplates] = useState(false);
  const [showSearch, setShowSearch] = useState(false);
  const [showVoiceRecorder, setShowVoiceRecorder] = useState(false);
  const [showRAGSettings, setShowRAGSettings] = useState(false);
  const [isHistoryCollapsed, setIsHistoryCollapsed] = useState(false);
  const messagesEndRef = useRef(null);
  const currentStreamRef = useRef(null);
  const initializedRef = useRef(false);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  // –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  const stopGeneration = () => {
    if (currentStreamRef.current) {
      currentStreamRef.current.abort();
      currentStreamRef.current = null;
    }

    if (wsStopGeneration) {
      wsStopGeneration();
    }

    setIsGenerating(false);
  };

  // WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  const {
    isConnected,
    sendMessage: wsSendMessage,
    stopGeneration: wsStopGeneration
  } = useChatWebSocket();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
  useEffect(() => {
    if (!initializedRef.current) {
      initializedRef.current = true;
      const newSessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
      setSessionId(newSessionId);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      setMessages([{
        id: 'welcome',
        type: 'ai',
        content: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ò–ò-–Æ—Ä–∏—Å—Ç! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –ø—Ä–∞–≤–æ–≤—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. –ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.',
        timestamp: new Date().toISOString()
      }]);
    }
  }, []);

  // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const sendMessage = async () => {
    if (!inputMessage.trim() || isGenerating) return;

    const userMessage = {
      id: `msg_${Date.now()}`,
      type: 'user',
      content: inputMessage,
      timestamp: new Date().toISOString(),
      files: attachedFiles
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setAttachedFiles([]);
    setIsGenerating(true);

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ WebSocket –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω, –∏–Ω–∞—á–µ —á–µ—Ä–µ–∑ HTTP
      if (isConnected) {
        wsSendMessage(inputMessage, sessionId, attachedFiles);
      } else {
        // HTTP fallback
        const response = await axios.post(`${getApiUrl()}/chat/send`, {
          message: inputMessage,
          session_id: sessionId,
          files: attachedFiles
        });

        const aiMessage = {
          id: `ai_${Date.now()}`,
          type: 'ai',
          content: response.data.response,
          timestamp: new Date().toISOString()
        };

        setMessages(prev => [...prev, aiMessage]);
        setIsGenerating(false);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      const errorMessage = {
        id: `error_${Date.now()}`,
        type: 'error',
        content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
        timestamp: new Date().toISOString()
      };
      setMessages(prev => [...prev, errorMessage]);
      setIsGenerating(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à
  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };

  return (
    <div className="flex h-screen bg-gray-50">
      {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏—Å—Ç–æ—Ä–∏–µ–π */}
      <div className={`${isHistoryCollapsed ? 'w-16' : 'w-80'} transition-all duration-300 bg-white border-r border-gray-200`}>
        <ChatHistory 
          isCollapsed={isHistoryCollapsed}
          onToggle={() => setIsHistoryCollapsed(!isHistoryCollapsed)}
        />
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç */}
      <div className="flex-1 flex flex-col">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-white border-b border-gray-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center">
                <Bot className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-xl font-semibold text-gray-900">–ò–ò-–Æ—Ä–∏—Å—Ç</h1>
                <div className="flex items-center space-x-2">
                  {isConnected ? (
                    <div className="flex items-center text-green-600">
                      <Wifi className="w-4 h-4" />
                      <span className="text-sm">–ü–æ–¥–∫–ª—é—á–µ–Ω–æ</span>
                    </div>
                  ) : (
                    <div className="flex items-center text-red-600">
                      <WifiOff className="w-4 h-4" />
                      <span className="text-sm">–û—Ç–∫–ª—é—á–µ–Ω–æ</span>
                    </div>
                  )}
                </div>
              </div>
            </div>
            
            <div className="flex items-center space-x-2">
              <button
                onClick={() => setShowRAGSettings(!showRAGSettings)}
                className="p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg"
                title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ RAG"
              >
                <Settings className="w-5 h-5" />
              </button>
            </div>
          </div>
        </div>

        {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π */}
        <div className="flex-1 overflow-y-auto p-6 space-y-4">
          {messages.map((message) => (
            <div key={message.id} className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}>
              <div className={`max-w-3xl ${message.type === 'user' ? 'order-2' : 'order-1'}`}>
                <div className={`flex items-start space-x-3 ${message.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>
                  <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                    message.type === 'user' ? 'bg-blue-600' : 'bg-gray-600'
                  }`}>
                    {message.type === 'user' ? (
                      <User className="w-4 h-4 text-white" />
                    ) : (
                      <Bot className="w-4 h-4 text-white" />
                    )}
                  </div>
                  
                  <div className={`px-4 py-3 rounded-lg ${
                    message.type === 'user' 
                      ? 'bg-blue-600 text-white' 
                      : message.type === 'error'
                      ? 'bg-red-100 text-red-800'
                      : 'bg-white text-gray-900 border border-gray-200'
                  }`}>
                    <EnhancedResponse content={message.content} />
                    <div className="text-xs opacity-70 mt-2">
                      {new Date(message.timestamp).toLocaleTimeString()}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
          
          {isGenerating && (
            <div className="flex justify-start">
              <div className="max-w-3xl">
                <div className="flex items-start space-x-3">
                  <div className="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center">
                    <Bot className="w-4 h-4 text-white" />
                  </div>
                  <div className="px-4 py-3 rounded-lg bg-white border border-gray-200">
                    <div className="flex items-center space-x-2">
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
                      <span className="text-gray-600">–ò–ò –¥—É–º–∞–µ—Ç...</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          <div ref={messagesEndRef} />
        </div>

        {/* –ü–∞–Ω–µ–ª—å –≤–≤–æ–¥–∞ */}
        <div className="bg-white border-t border-gray-200 p-6">
          {/* –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã */}
          {attachedFiles.length > 0 && (
            <div className="mb-4 flex flex-wrap gap-2">
              {attachedFiles.map((file, index) => (
                <div key={index} className="flex items-center space-x-2 bg-gray-100 px-3 py-2 rounded-lg">
                  <File className="w-4 h-4 text-gray-600" />
                  <span className="text-sm text-gray-700">{file.name}</span>
                  <button
                    onClick={() => setAttachedFiles(prev => prev.filter((_, i) => i !== index))}
                    className="text-gray-500 hover:text-gray-700"
                  >
                    <X className="w-4 h-4" />
                  </button>
                </div>
              ))}
            </div>
          )}

          <div className="flex items-end space-x-4">
            <div className="flex-1">
              <textarea
                value={inputMessage}
                onChange={(e) => setInputMessage(e.target.value)}
                onKeyPress={handleKeyPress}
                placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –ø—Ä–∞–≤–æ–≤–æ–π –≤–æ–ø—Ä–æ—Å..."
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
                rows={3}
                disabled={isGenerating}
              />
            </div>
            
            <div className="flex flex-col space-y-2">
              <button
                onClick={() => setShowFileUpload(!showFileUpload)}
                className="p-3 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg"
                title="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª"
              >
                <Paperclip className="w-5 h-5" />
              </button>
              
              <button
                onClick={() => setShowVoiceRecorder(!showVoiceRecorder)}
                className="p-3 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg"
                title="–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥"
              >
                <Mic className="w-5 h-5" />
              </button>
              
              <button
                onClick={sendMessage}
                disabled={!inputMessage.trim() || isGenerating}
                className="p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed"
                title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
              >
                <Send className="w-5 h-5" />
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {showFileUpload && (
        <LazyFileUpload
          onClose={() => setShowFileUpload(false)}
          onFilesSelected={(files) => setAttachedFiles(prev => [...prev, ...files])}
        />
      )}
      
      {showTemplates && (
        <LazyQuestionTemplates
          onClose={() => setShowTemplates(false)}
          onTemplateSelect={(template) => setInputMessage(template)}
        />
      )}
      
      {showSearch && (
        <LazyMessageSearch
          onClose={() => setShowSearch(false)}
          messages={messages}
        />
      )}
      
      {showVoiceRecorder && (
        <VoiceRecorder
          onClose={() => setShowVoiceRecorder(false)}
          onRecordingComplete={(audioBlob) => {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ –∑–∞–ø–∏—Å–∏
            console.log('Audio recorded:', audioBlob);
          }}
        />
      )}
      
      {showRAGSettings && (
        <RAGSettings
          onClose={() => setShowRAGSettings(false)}
        />
      )}
    </div>
  );
};

export default Chat;
EOF

echo "‚úÖ Chat.js –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!"

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ModerationPanel.js
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ frontend/src/pages/ModerationPanel.js..."

cat > /root/advakod/frontend/src/pages/ModerationPanel.js << 'EOF'
import React, { useState, useEffect, useCallback } from 'react';
import { Shield, Users, AlertTriangle, CheckCircle, Clock, Eye } from 'lucide-react';
import axios from 'axios';
import { getApiUrl } from '../config/api';

const ModerationPanel = () => {
  const [moderationQueue, setModerationQueue] = useState([]);
  const [loading, setLoading] = useState(true);
  const [stats, setStats] = useState({
    pending: 0,
    approved: 0,
    rejected: 0,
    total: 0
  });

  const loadQueue = useCallback(async () => {
    try {
      setLoading(true);
      const response = await axios.get(`${getApiUrl()}/moderation/queue`);
      setModerationQueue(response.data.items || []);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const newStats = {
        pending: response.data.items?.filter(item => item.status === 'pending').length || 0,
        approved: response.data.items?.filter(item => item.status === 'approved').length || 0,
        rejected: response.data.items?.filter(item => item.status === 'rejected').length || 0,
        total: response.data.items?.length || 0
      };
      setStats(newStats);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error);
    } finally {
      setLoading(false);
    }
  }, []);

  useEffect(() => {
    loadQueue();
  }, [loadQueue]);

  const handleModerationAction = async (itemId, action) => {
    try {
      await axios.post(`${getApiUrl()}/moderation/${action}`, {
        item_id: itemId
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setModerationQueue(prev => 
        prev.map(item => 
          item.id === itemId 
            ? { ...item, status: action === 'approve' ? 'approved' : 'rejected' }
            : item
        )
      );
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      setStats(prev => ({
        ...prev,
        pending: prev.pending - 1,
        [action === 'approve' ? 'approved' : 'rejected']: prev[action === 'approve' ? 'approved' : 'rejected'] + 1
      }));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error);
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case 'pending':
        return <Clock className="w-4 h-4 text-yellow-500" />;
      case 'approved':
        return <CheckCircle className="w-4 h-4 text-green-500" />;
      case 'rejected':
        return <AlertTriangle className="w-4 h-4 text-red-500" />;
      default:
        return <Eye className="w-4 h-4 text-gray-500" />;
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'pending':
        return 'bg-yellow-100 text-yellow-800';
      case 'approved':
        return 'bg-green-100 text-green-800';
      case 'rejected':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8">
          <div className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
              <Shield className="w-6 h-6 text-white" />
            </div>
            <div>
              <h1 className="text-3xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h1>
              <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</p>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                <Clock className="w-6 h-6 text-yellow-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">–û–∂–∏–¥–∞—é—Ç</p>
                <p className="text-2xl font-bold text-gray-900">{stats.pending}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                <CheckCircle className="w-6 h-6 text-green-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">–û–¥–æ–±—Ä–µ–Ω–æ</p>
                <p className="text-2xl font-bold text-gray-900">{stats.approved}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center">
                <AlertTriangle className="w-6 h-6 text-red-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</p>
                <p className="text-2xl font-bold text-gray-900">{stats.rejected}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                <Users className="w-6 h-6 text-blue-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">–í—Å–µ–≥–æ</p>
                <p className="text-2xl font-bold text-gray-900">{stats.total}</p>
              </div>
            </div>
          </div>
        </div>

        {/* –û—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ */}
        <div className="bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900">–û—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h2>
          </div>

          {loading ? (
            <div className="p-8 text-center">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
              <p className="mt-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
            </div>
          ) : moderationQueue.length === 0 ? (
            <div className="p-8 text-center">
              <Shield className="w-12 h-12 text-gray-400 mx-auto mb-4" />
              <p className="text-gray-600">–ù–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏</p>
            </div>
          ) : (
            <div className="divide-y divide-gray-200">
              {moderationQueue.map((item) => (
                <div key={item.id} className="p-6">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        {getStatusIcon(item.status)}
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(item.status)}`}>
                          {item.status === 'pending' ? '–û–∂–∏–¥–∞–µ—Ç' : 
                           item.status === 'approved' ? '–û–¥–æ–±—Ä–µ–Ω–æ' : '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ'}
                        </span>
                        <span className="text-sm text-gray-500">
                          {new Date(item.created_at).toLocaleString()}
                        </span>
                      </div>
                      
                      <div className="mb-3">
                        <h3 className="text-sm font-medium text-gray-900 mb-1">
                          {item.type === 'message' ? '–°–æ–æ–±—â–µ–Ω–∏–µ' : 
                           item.type === 'document' ? '–î–æ–∫—É–º–µ–Ω—Ç' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                        </h3>
                        <p className="text-gray-700">{item.content || item.description}</p>
                      </div>

                      {item.user && (
                        <div className="text-sm text-gray-600">
                          <span className="font-medium">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</span> {item.user.email}
                        </div>
                      )}
                    </div>

                    {item.status === 'pending' && (
                      <div className="flex space-x-2 ml-4">
                        <button
                          onClick={() => handleModerationAction(item.id, 'approve')}
                          className="px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700"
                        >
                          –û–¥–æ–±—Ä–∏—Ç—å
                        </button>
                        <button
                          onClick={() => handleModerationAction(item.id, 'reject')}
                          className="px-3 py-1 bg-red-600 text-white text-sm rounded-md hover:bg-red-700"
                        >
                          –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                        </button>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ModerationPanel;
EOF

echo "‚úÖ ModerationPanel.js –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!"

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ModerationDashboard.js
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ frontend/src/pages/ModerationDashboard.js..."

cat > /root/advakod/frontend/src/pages/ModerationDashboard.js << 'EOF'
import React, { useState, useEffect, useCallback } from 'react';
import { Shield, TrendingUp, Users, AlertTriangle, CheckCircle, Clock } from 'lucide-react';
import axios from 'axios';
import { getApiUrl } from '../config/api';

const ModerationDashboard = () => {
  const [dashboardData, setDashboardData] = useState({
    stats: {
      totalModerations: 0,
      pendingModerations: 0,
      approvedModerations: 0,
      rejectedModerations: 0
    },
    trends: {
      dailyModerations: [],
      weeklyModerations: []
    },
    recentActivity: []
  });
  const [loading, setLoading] = useState(true);

  const loadData = useCallback(async () => {
    try {
      setLoading(true);
      const response = await axios.get(`${getApiUrl()}/moderation/dashboard`);
      setDashboardData(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞:', error);
    } finally {
      setLoading(false);
    }
  }, []);

  useEffect(() => {
    loadData();
  }, [loadData]);

  const StatCard = ({ title, value, icon: Icon, color, trend }) => (
    <div className="bg-white rounded-lg shadow p-6">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-sm font-medium text-gray-600">{title}</p>
          <p className="text-2xl font-bold text-gray-900">{value}</p>
          {trend && (
            <div className="flex items-center mt-1">
              <TrendingUp className="w-4 h-4 text-green-500" />
              <span className="text-sm text-green-600 ml-1">{trend}%</span>
            </div>
          )}
        </div>
        <div className={`w-12 h-12 ${color} rounded-lg flex items-center justify-center`}>
          <Icon className="w-6 h-6 text-white" />
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8">
          <div className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
              <Shield className="w-6 h-6 text-white" />
            </div>
            <div>
              <h1 className="text-3xl font-bold text-gray-900">–î–∞—à–±–æ—Ä–¥ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h1>
              <p className="text-gray-600">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</p>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <StatCard
            title="–í—Å–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ü–∏–π"
            value={dashboardData.stats.totalModerations}
            icon={Shield}
            color="bg-blue-100"
          />
          <StatCard
            title="–û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
            value={dashboardData.stats.pendingModerations}
            icon={Clock}
            color="bg-yellow-100"
          />
          <StatCard
            title="–û–¥–æ–±—Ä–µ–Ω–æ"
            value={dashboardData.stats.approvedModerations}
            icon={CheckCircle}
            color="bg-green-100"
          />
          <StatCard
            title="–û—Ç–∫–ª–æ–Ω–µ–Ω–æ"
            value={dashboardData.stats.rejectedModerations}
            icon={AlertTriangle}
            color="bg-red-100"
          />
        </div>

        {/* –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* –ì—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤ */}
          <div className="bg-white rounded-lg shadow p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–¢—Ä–µ–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h3>
            {loading ? (
              <div className="flex items-center justify-center h-64">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
              </div>
            ) : (
              <div className="h-64 flex items-center justify-center text-gray-500">
                <p>–ì—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤ –±—É–¥–µ—Ç –∑–¥–µ—Å—å</p>
              </div>
            )}
          </div>

          {/* –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
          <div className="bg-white rounded-lg shadow p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
            {loading ? (
              <div className="flex items-center justify-center h-64">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
              </div>
            ) : dashboardData.recentActivity.length === 0 ? (
              <div className="flex items-center justify-center h-64 text-gray-500">
                <p>–ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
              </div>
            ) : (
              <div className="space-y-4">
                {dashboardData.recentActivity.map((activity, index) => (
                  <div key={index} className="flex items-center space-x-3">
                    <div className="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center">
                      <Shield className="w-4 h-4 text-gray-600" />
                    </div>
                    <div className="flex-1">
                      <p className="text-sm text-gray-900">{activity.description}</p>
                      <p className="text-xs text-gray-500">{activity.timestamp}</p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default ModerationDashboard;
EOF

echo "‚úÖ ModerationDashboard.js –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!"

echo ""
echo "üéâ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ö–û–î–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã"
echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã React hooks"
echo "‚úÖ –£–±—Ä–∞–Ω—ã ESLint –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
echo "‚úÖ –ö–æ–¥ —Å—Ç–∞–ª —á–∏—â–µ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–µ–µ"
