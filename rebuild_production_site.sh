#!/bin/bash

echo "üöÄ –ü–û–õ–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –°–ê–ô–¢–ê ADVAKOD"
echo "=================================="
echo ""

# –ó–∞–ø—Ä–æ—Å –¥–æ–º–µ–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "üåê –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, advacodex.com): " DOMAIN

if [ -z "$DOMAIN" ]; then
  echo "‚ùå –î–æ–º–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω!"
  exit 1
fi

echo ""
echo "‚úÖ –î–æ–º–µ–Ω: $DOMAIN"
echo ""

# 1. –°–æ–∑–¥–∞–µ–º production .env –¥–ª—è frontend
echo "üìù –°–æ–∑–¥–∞—é frontend/.env.production..."
cd frontend

cat > .env.production << EOF
# ========================================
# –ê–î–í–ê–ö–û–î - Production Environment
# Frontend Configuration
# ========================================

# API Configuration
REACT_APP_API_URL=https://${DOMAIN}
REACT_APP_WS_URL=wss://${DOMAIN}

# App Configuration
REACT_APP_NAME="–ê–î–í–ê–ö–û–î"
REACT_APP_VERSION="1.0.0"
REACT_APP_ENV=production

# Build Configuration
GENERATE_SOURCEMAP=false
PORT=3000

# Performance
REACT_APP_OPTIMIZE_CHUNKS=true
REACT_APP_ENABLE_SW=true
EOF

echo "‚úÖ –§–∞–π–ª frontend/.env.production —Å–æ–∑–¥–∞–Ω"
echo ""

# 2. –°–æ–∑–¥–∞–µ–º production .env –¥–ª—è backend
echo "üìù –°–æ–∑–¥–∞—é backend/.env.production..."
cd ../backend

cat > .env.production << EOF
# ========================================
# –ê–î–í–ê–ö–û–î - Production Environment
# Backend Configuration
# ========================================

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
PROJECT_NAME="–ê–î–í–ê–ö–û–î - –ò–ò-–Æ—Ä–∏—Å—Ç –¥–ª—è –†–§"
ENVIRONMENT=production
DEBUG=false

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–õ–£–ß–ê–ô–ù–´–ï –ö–õ–Æ–ß–ò!)
SECRET_KEY=YOUR_PRODUCTION_SECRET_KEY_MINIMUM_32_CHARACTERS_WITH_UPPERCASE_LOWERCASE_DIGITS
ENCRYPTION_KEY=YOUR_PRODUCTION_ENCRYPTION_KEY_MINIMUM_32_CHARACTERS

# PostgreSQL Database (Production)
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=advakod
POSTGRES_PASSWORD=YOUR_STRONG_POSTGRES_PASSWORD_HERE
POSTGRES_DB=advakod_db
DATABASE_URL=postgresql://advakod:YOUR_STRONG_POSTGRES_PASSWORD_HERE@postgres:5432/advakod_db

# CORS (–≤–∞—à –¥–æ–º–µ–Ω)
CORS_ORIGINS=https://${DOMAIN},https://www.${DOMAIN}

# Redis
REDIS_URL=redis://redis:6379

# Qdrant
QDRANT_HOST=qdrant
QDRANT_PORT=6333
QDRANT_COLLECTION_NAME=legal_documents

# AI Models
VISTRAL_MODEL_PATH=/opt/advakod/models/vistral-24b-instruct-q4_K_M.gguf
VISTRAL_N_CTX=8192
VISTRAL_N_THREADS=8
VISTRAL_N_GPU_LAYERS=0
VISTRAL_INFERENCE_TIMEOUT=900
VISTRAL_MAX_CONCURRENCY=1

# –¢–∞–π–º–∞—É—Ç—ã
AI_DOCUMENT_ANALYSIS_TIMEOUT=300
AI_CHAT_RESPONSE_TIMEOUT=120
AI_COMPLEX_ANALYSIS_TIMEOUT=600

# –¢–æ–∫–µ–Ω—ã
AI_DOCUMENT_ANALYSIS_TOKENS=30000
AI_CHAT_RESPONSE_TOKENS=4000

# JWT
ACCESS_TOKEN_EXPIRE_MINUTES=480
ALGORITHM=HS256

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
UPLOAD_DIR=uploads
LOG_DIR=logs
TEMP_DIR=temp

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
CACHE_TTL_DEFAULT=3600
CACHE_TTL_AI_RESPONSE=7200
CACHE_TTL_USER_PROFILE=1800

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_PROMPTS=false
EOF

echo "‚úÖ –§–∞–π–ª backend/.env.production —Å–æ–∑–¥–∞–Ω"
echo ""

# 3. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
cd ../frontend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ ! -d "node_modules" ]; then
  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
  npm install
fi

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞
npm run build

if [ $? -eq 0 ]; then
  echo ""
  echo "‚úÖ Frontend —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω!"
  echo ""
  echo "üì¶ Build –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: frontend/build/"
  echo ""
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ build –Ω–µ—Ç localhost
  echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é build –Ω–∞ –Ω–∞–ª–∏—á–∏–µ localhost..."
  if grep -r "localhost" build/static/js/*.js > /dev/null 2>&1; then
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í build –Ω–∞–π–¥–µ–Ω—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è localhost!"
    echo "   –≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å —á—Ç–æ .env.production –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª—Å—è"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env.production"
  else
    echo "‚úÖ Build —á–∏—Å—Ç—ã–π - localhost –Ω–µ –Ω–∞–π–¥–µ–Ω"
  fi
  
  echo ""
  echo "üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
  echo ""
  echo "1. üìù –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∑–∞–º–µ–Ω–∏—Ç–µ –∫–ª—é—á–∏ –≤ backend/.env.production:"
  echo "   SECRET_KEY=–≤–∞—à-—Å–ª—É—á–∞–π–Ω—ã–π-–∫–ª—é—á-32-—Å–∏–º–≤–æ–ª–∞"
  echo "   ENCRYPTION_KEY=–≤–∞—à-—Å–ª—É—á–∞–π–Ω—ã–π-–∫–ª—é—á-32-—Å–∏–º–≤–æ–ª–∞"
  echo "   POSTGRES_PASSWORD=–≤–∞—à-—Å–∏–ª—å–Ω—ã–π-–ø–∞—Ä–æ–ª—å"
  echo ""
  echo "2. üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:"
  echo "   scp -r build/ user@server:/path/to/advakod/frontend/"
  echo ""
  echo "3. üê≥ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker:"
  echo "   docker-compose -f docker-compose.prod.yml build frontend"
  echo "   docker-compose -f docker-compose.prod.yml up -d"
  echo ""
  echo "4. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç:"
  echo "   https://${DOMAIN}"
  echo "   https://${DOMAIN}/api/v1/health"
  echo ""
  echo "5. üîß –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:"
  echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs backend frontend"
  echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ CORS –≤ backend/.env.production"
  echo "   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–æ–º–µ–Ω —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
  echo ""
  echo "=================================="
  echo "üéâ –°–ê–ô–¢ –ì–û–¢–û–í –ö –ó–ê–ü–£–°–ö–£!"
  echo "=================================="
  
else
  echo ""
  echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞!"
  echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
  echo "1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install"
  echo "2. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω –¥–æ–º–µ–Ω –≤ .env.production"
  echo "3. –ù–µ—Ç –ª–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ"
  exit 1
fi
