#!/bin/bash

# üöÄ –§–û–ù–û–í–û–ï –°–ö–ê–ß–ò–í–ê–ù–ò–ï –ú–û–î–ï–õ–ï–ô
# –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç —Å–µ—Å—Å–∏–∏

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
SCRIPT_DIR="/root/advakod"
LOG_DIR="/root/advakod/logs"
MODEL_DIR="/opt/advakod/models"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$LOG_DIR"
mkdir -p "$MODEL_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ —Ñ–æ–Ω–µ
run_background_download() {
    local script_name=$1
    local log_file=$2
    local description=$3
    
    log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: $description"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –ø—Ä–æ—Ü–µ—Å—Å
    if pgrep -f "$script_name" > /dev/null; then
        log_warning "–ü—Ä–æ—Ü–µ—Å—Å $script_name —É–∂–µ –∑–∞–ø—É—â–µ–Ω!"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ —Å nohup
    nohup bash "$SCRIPT_DIR/$script_name" > "$log_file" 2>&1 &
    local pid=$!
    
    log_success "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω —Å PID: $pid"
    log_info "–õ–æ–≥ —Ñ–∞–π–ª: $log_file"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    echo "$pid" > "$LOG_DIR/${script_name%.sh}.pid"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
monitor_process() {
    local pid_file=$1
    local process_name=$2
    
    if [ -f "$pid_file" ]; then
        local pid=$(cat "$pid_file")
        if ps -p "$pid" > /dev/null 2>&1; then
            log_success "$process_name —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $pid)"
            return 0
        else
            log_warning "$process_name –∑–∞–≤–µ—Ä—à–∏–ª—Å—è (PID: $pid)"
            rm -f "$pid_file"
            return 1
        fi
    else
        log_warning "$process_name –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    echo ""
    echo "üöÄ –§–û–ù–û–í–û–ï –°–ö–ê–ß–ò–í–ê–ù–ò–ï –ú–û–î–ï–õ–ï–ô –ò –ö–û–î–ï–ö–°–û–í"
    echo "========================================"
    echo ""
    echo "1) üì• –°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª–∏ AI (Vistral-24B, Borealis)"
    echo "2) üìö –°–∫–∞—á–∞—Ç—å –∫–æ–¥–µ–∫—Å—ã –†–§ (–≤—Å–µ –∫–æ–¥–µ–∫—Å—ã)"
    echo "3) üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo "4) üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
    echo "5) üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "6) üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏"
    echo "0) –í—ã—Ö–æ–¥"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
download_models() {
    log_info "üì• –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π AI..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞
    if [ ! -f "$SCRIPT_DIR/2_download_models_fixed.sh" ]; then
        log_error "–°–∫—Ä–∏–ø—Ç 2_download_models_fixed.sh –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    run_background_download \
        "2_download_models_fixed.sh" \
        "$LOG_DIR/models_download_$(date +%Y%m%d_%H%M%S).log" \
        "–ú–æ–¥–µ–ª–∏ AI (Vistral-24B, Borealis)"
    
    if [ $? -eq 0 ]; then
        log_success "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–µ!"
        log_info "–ú–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å—Å—è - –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è"
        log_info "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø—Ü–∏—é 3"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–¥–µ–∫—Å–æ–≤
download_codexes() {
    log_info "üìö –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤ –†–§..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞
    if [ ! -f "$SCRIPT_DIR/smart_codex_downloader.py" ]; then
        log_error "–°–∫—Ä–∏–ø—Ç smart_codex_downloader.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤
    nohup python3 "$SCRIPT_DIR/smart_codex_downloader.py" all > "$LOG_DIR/codexes_download_$(date +%Y%m%d_%H%M%S).log" 2>&1 &
    local pid=$!
    
    log_success "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ —Å PID: $pid"
    echo "$pid" > "$LOG_DIR/codexes_download.pid"
    
    log_success "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–µ!"
    log_info "–ú–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å—Å—è - –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo ""
    log_info "üìä –°–¢–ê–¢–£–° –§–û–ù–û–í–´–• –ü–†–û–¶–ï–°–°–û–í"
    echo "=============================="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    monitor_process "$LOG_DIR/models_download.pid" "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤
    monitor_process "$LOG_DIR/codexes_download.pid" "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤"
    
    echo ""
    log_info "üìÅ –ê–∫—Ç–∏–≤–Ω—ã–µ –ª–æ–≥ —Ñ–∞–π–ª—ã:"
    ls -la "$LOG_DIR"/*.log 2>/dev/null | tail -5 || log_warning "–õ–æ–≥ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
stop_processes() {
    log_info "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    if [ -f "$LOG_DIR/models_download.pid" ]; then
        local pid=$(cat "$LOG_DIR/models_download.pid")
        if ps -p "$pid" > /dev/null 2>&1; then
            kill "$pid"
            log_success "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π (PID: $pid)"
        fi
        rm -f "$LOG_DIR/models_download.pid"
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤
    if [ -f "$LOG_DIR/codexes_download.pid" ]; then
        local pid=$(cat "$LOG_DIR/codexes_download.pid")
        if ps -p "$pid" > /dev/null 2>&1; then
            kill "$pid"
            log_success "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–¥–µ–∫—Å–æ–≤ (PID: $pid)"
        fi
        rm -f "$LOG_DIR/codexes_download.pid"
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å –Ω–∞—à–∏–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏
    pkill -f "2_download_models_fixed.sh" 2>/dev/null && log_success "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –º–æ–¥–µ–ª–µ–π"
    pkill -f "smart_codex_downloader.py" 2>/dev/null && log_success "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ–¥–µ–∫—Å–æ–≤"
    
    log_success "–í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo ""
    log_info "üìã –ü–û–°–õ–ï–î–ù–ò–ï –õ–û–ì–ò"
    echo "=================="
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
    if [ -d "$LOG_DIR" ]; then
        echo ""
        log_info "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥ —Ñ–∞–π–ª—ã:"
        ls -la "$LOG_DIR"/*.log 2>/dev/null | tail -10
        
        echo ""
        read -p "–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ª–æ–≥–∞? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            local latest_log=$(ls -t "$LOG_DIR"/*.log 2>/dev/null | head -1)
            if [ -n "$latest_log" ]; then
                echo ""
                log_info "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: $latest_log"
                echo "=========================================="
                tail -50 "$latest_log"
            fi
        fi
    else
        log_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
restart_downloads() {
    log_info "üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –ø—Ä–µ—Ä–≤–∞–Ω—ã –∑–∞–≥—Ä—É–∑–∫–∏
    local interrupted=false
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
    if [ ! -f "$MODEL_DIR/vistral-24b.gguf" ] && [ ! -d "$MODEL_DIR/vistral" ]; then
        log_warning "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ"
        interrupted=true
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥–µ–∫—Å—ã
    if [ ! -d "/root/advakod/smart_codexes/codexes" ] || [ -z "$(ls -A /root/advakod/smart_codexes/codexes 2>/dev/null)" ]; then
        log_warning "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–µ–∫—Å–æ–≤ –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ"
        interrupted=true
    fi
    
    if [ "$interrupted" = true ]; then
        echo ""
        read -p "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            log_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏..."
            download_models
            download_codexes
        fi
    else
        log_success "–í—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
main() {
    while true; do
        show_menu
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (0-6): " choice
        
        case $choice in
            1)
                download_models
                ;;
            2)
                download_codexes
                ;;
            3)
                show_status
                ;;
            4)
                stop_processes
                ;;
            5)
                show_logs
                ;;
            6)
                restart_downloads
                ;;
            0)
                log_info "–í—ã—Ö–æ–¥..."
                exit 0
                ;;
            *)
                log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    done
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if [ $# -gt 0 ]; then
    case $1 in
        "models")
            download_models
            ;;
        "codexes")
            download_codexes
            ;;
        "status")
            show_status
            ;;
        "stop")
            stop_processes
            ;;
        "logs")
            show_logs
            ;;
        "restart")
            restart_downloads
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [models|codexes|status|stop|logs|restart]"
            echo "–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é"
            exit 1
            ;;
    esac
else
    main
fi

