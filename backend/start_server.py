#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ê–î–í–ê–ö–û–î
"""

import sys
import os
import uvicorn

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from main import app
    print("‚úÖ main.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ main.py: {e}")
    print("–°–æ–∑–¥–∞—é –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...")
    
    from fastapi import FastAPI
    from fastapi.middleware.cors import CORSMiddleware
    
    app = FastAPI(title="–ê–î–í–ê–ö–û–î - –ò–ò-–Æ—Ä–∏—Å—Ç")
    
    app.add_middleware(
        CORSMiddleware,
        allow_origins=["*"],
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )
    
    @app.get("/")
    async def root():
        return {"message": "–ê–î–í–ê–ö–û–î - –ò–ò-–Æ—Ä–∏—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"}
    
    @app.get("/health")
    async def health():
        return {"status": "healthy", "message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"}
    
    @app.get("/api/v1/monitoring/health")
    async def health_check():
        return {
            "status": "healthy",
            "timestamp": "2024-09-17T21:28:00Z",
            "database": {"status": "healthy", "type": "sqlite"},
            "services": {
                "vector_store": "ready",
                "ai_models": "loading",
                "embeddings": "loading",
                "rag": "loading"
            }
        }

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä –ê–î–í–ê–ö–û–î –Ω–∞ –ø–æ—Ä—Ç—É 8000...")
    uvicorn.run(app, host="0.0.0.0", port=8000, reload=True)
