import logging
import time
import threading
import asyncio
from typing import Optional, AsyncGenerator, Any
from queue import Queue
from ..core.config import settings

# –í–Ω–µ—à–Ω—è—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å llama_cpp –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
from llama_cpp import Llama

logger = logging.getLogger(__name__)


def _redact_for_logs(text: str, max_len: int = 120) -> str:
    """–û–±—Ä–µ–∑–∞–µ—Ç –∏ –º–∞—Å–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ª–æ–≥–æ–≤."""
    if not text:
        return ""
    s = text.strip()
    if len(s) <= max_len:
        # –∑–∞–º–µ–Ω–∏–º –ø–µ—Ä–µ–Ω–æ—Å—ã –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        return s.replace("\n", " ")
    return (s[:max_len//2] + " ... " + s[-max_len//2:]).replace("\n", " ")


def _estimate_tokens(text: str) -> int:
    """–ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤: 1 —Ç–æ–∫–µ–Ω ‚âà 3-4 —Å–∏–º–≤–æ–ª–∞.
       –î–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ tiktoken –∏–ª–∏ —Ç–æ—Ç —Ç–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä,
       –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–º–µ—Å—Ç–∏–º —Å –≤–∞—à–µ–π –º–æ–¥–µ–ª—å—é, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å.
    """
    if not text:
        return 0
    return max(1, len(text) // 4)


class SaigaService:
    def __init__(self):
        self.model: Optional[Llama] = None
        self._model_loaded: bool = False
        # –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ (thread-safe)
        self._load_lock = threading.Lock()
        # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–µ–º–∞—Ñ–æ—Ä –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–æ–≤
        # –ë—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–µ–Ω–∏–≤–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ ensure_settings
        self._async_semaphore: Optional[asyncio.Semaphore] = None

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ (—Å–µ–∫)
        self._inference_timeout = getattr(settings, "VISTRAL_INFERENCE_TIMEOUT", 60)
        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è (–∫–æ–ª-–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–æ–≤)
        self._max_concurrency = getattr(settings, "VISTRAL_MAX_CONCURRENCY", 1)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        self._stats = {
            "total_requests": 0,
            "successful_requests": 0,
            "failed_requests": 0,
            "average_response_time": 0.0,
            "last_response_time": 0.0
        }

    def _ensure_semaphore(self):
        if self._async_semaphore is None:
            # –°–æ–∑–¥–∞—ë–º —Å–µ–º–∞—Ñ–æ—Ä –≤ event loop –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
            try:
                loop = asyncio.get_running_loop()
                self._async_semaphore = asyncio.Semaphore(self._max_concurrency)
            except RuntimeError:
                # –µ—Å–ª–∏ –º—ã –≤ sync –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, —Å–æ–∑–¥–∞—ë–º –æ–±—ã—á–Ω—ã–π —Å–µ–º–∞—Ñ–æ—Ä
                self._async_semaphore = asyncio.Semaphore(self._max_concurrency)
    
    def _load_model(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ Saiga Mistral 7B.
        –ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫ ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –∏–ª–∏ –ø–æ–¥ lock.
        """
        # –ë–µ—Ä—ë–º lock, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –∑–∞–≥—Ä—É–∂–∞–ª –º–æ–¥–µ–ª—å
        if self._model_loaded and self.model is not None:
            return

        with self._load_lock:
            if self._model_loaded and self.model is not None:
                return
            try:
                import os
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏
                if not os.path.exists(settings.VISTRAL_MODEL_PATH):
                    raise FileNotFoundError(f"–§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {settings.VISTRAL_MODEL_PATH}")
                
                logger.info("–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å Vistral 24B –∏–∑ %s", settings.VISTRAL_MODEL_PATH)
                logger.info("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: n_ctx=%s, n_threads=%s", settings.VISTRAL_N_CTX, settings.VISTRAL_N_THREADS)

                self.model = Llama(
                    model_path=settings.VISTRAL_MODEL_PATH,
                    n_ctx=settings.VISTRAL_N_CTX,
                    n_threads=settings.VISTRAL_N_THREADS,
                    n_gpu_layers=getattr(settings, "VISTRAL_N_GPU_LAYERS", 0),
                    logits_all=False,
                    use_mmap=True,
                    use_mlock=False,
                    verbose=False  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ω–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥; –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
                )
                self._model_loaded = True
                logger.info("‚úÖ –ú–æ–¥–µ–ª—å Saiga —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            except FileNotFoundError as e:
                logger.error("‚ùå –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: %s", e)
                raise
            except ImportError as e:
                logger.error("‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ llama_cpp: %s", e)
                raise RuntimeError("llama_cpp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install llama-cpp-python")
            except MemoryError as e:
                logger.error("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: %s", e)
                raise RuntimeError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å n_ctx –∏–ª–∏ n_threads")
            except Exception as e:
                logger.exception("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ Saiga: %s", e)
                # –Ω–µ –ø–æ–¥–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ –º–æ–≥ –µ—ë –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
                raise

    async def ensure_model_loaded_async(self) -> None:
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ ThreadPool (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)."""
        if self._model_loaded and self.model is not None:
            return
        # –í—ã–∑—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å loop
        loop = asyncio.get_running_loop()
        await loop.run_in_executor(None, self._load_model)

    def ensure_model_loaded_sync(self) -> None:
        """Sync-–≤–µ—Ä—Å–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ sync-–∫–æ–¥–∞ (–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ async)."""
        if self._model_loaded and self.model is not None:
            return
        self._load_model()

    def _compute_max_gen_tokens(self, prompt: str, requested_max: int) -> int:
        """–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º max_tokens –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç n_ctx –∏ –¥–ª–∏–Ω—ã prompt."""
        n_ctx = getattr(settings, "VISTRAL_N_CTX", 4096)
        prompt_tokens = _estimate_tokens(prompt)
        safety_margin = getattr(settings, "VISTRAL_TOKEN_MARGIN", 32)
        available = max(1, n_ctx - prompt_tokens - safety_margin)
        if requested_max > available:
            logger.debug("requested_max (%s) > available (%s) -> limiting to available", requested_max, available)
            return available
        return requested_max

    async def generate_response_async(
        self,
        prompt: str,
        max_tokens: int = 1024,
        temperature: float = 0.3,
        top_p: float = 0.8
    ) -> str:
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ‚Äî –±–µ–∑–æ–ø–∞—Å–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ FastAPI."""
        start_time = time.time()
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
        self._ensure_semaphore()
        await self.ensure_model_loaded_async()

        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏
        assert self._async_semaphore is not None
        async with self._async_semaphore:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º max tokens –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ context window
            allowed_max = self._compute_max_gen_tokens(prompt, max_tokens)

            # –ù–µ –ª–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π prompt ‚Äî —Ä–∏—Å–∫–∏ PII. –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é.
            if getattr(settings, "LOG_PROMPTS", False):
                logger.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ (async) prompt=%s... max_tokens=%s temp=%s", _redact_for_logs(prompt, 120), allowed_max, temperature)
            else:
                logger.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ (async) max_tokens=%s temp=%s", allowed_max, temperature)

            loop = asyncio.get_running_loop()

            def _blocking_call():
                # –û–±—ë—Ä—Ç–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –º–æ–¥–µ–ª–∏
                try:
                    result = self.model(
                        prompt,
                        max_tokens=allowed_max,
                        temperature=temperature,
                        top_p=top_p,
                        stop=getattr(settings, "VISTRAL_STOP_TOKENS", None),
                        repeat_penalty=getattr(settings, "VISTRAL_REPEAT_PENALTY", 1.1),
                    )
                    # –û–±—ã—á–Ω–æ llama_cpp –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç dict with choices
                    return result
                except Exception as e:
                    # –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–≤–µ—Ä—Ö
                    logger.exception("–û—à–∏–±–∫–∞ –≤ blocking_call –º–æ–¥–µ–ª–∏: %s", e)
                    raise

            try:
                # –ó–∞–ø—É—Å–∫ –≤ executor —Å —Ç–∞–π–º–∞—É—Ç–æ–º
                result = await asyncio.wait_for(loop.run_in_executor(None, _blocking_call), timeout=self._inference_timeout)
            except asyncio.TimeoutError:
                logger.error("‚è∞ Inference timeout after %s seconds", self._inference_timeout)
                raise RuntimeError(f"Inference timeout after {self._inference_timeout} seconds")
            except MemoryError as e:
                logger.error("üíæ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: %s", e)
                raise RuntimeError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞")
            except Exception as e:
                logger.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: %s", e)
                raise

            try:
                text = ""
                if isinstance(result, dict) and "choices" in result and len(result["choices"]) > 0:
                    text = (result["choices"][0].get("text") or "").strip()
                else:
                    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –¥–æ—Å—Ç—É–ø, –µ—Å–ª–∏ API –¥—Ä—É–≥–æ–π
                    text = str(result)
                
                response_time = time.time() - start_time
                self._update_stats(True, response_time)
                logger.info("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (len=%s, time=%.2fs)", len(text), response_time)
                return text
            except Exception as e:
                response_time = time.time() - start_time
                self._update_stats(False, response_time)
                logger.exception("‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–æ–¥–µ–ª–∏: %s", e)
                raise

    def generate_response(
        self,
        prompt: str,
        max_tokens: int = 1024,
        temperature: float = 0.3,
        top_p: float = 0.8
    ) -> str:
        """Sync-–≤–µ—Ä—Å–∏—è ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç async —á–µ—Ä–µ–∑ asyncio.run –≤ sync-–∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.
           –í–∞–∂–Ω–æ: –≤—ã–∑—ã–≤–∞—Ç—å –µ—ë –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º thread, –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å event loop.
        """
        # –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        if not self._model_loaded or not self.model:
            self.ensure_model_loaded_sync()
        # –ü—Ä–æ—Å—Ç–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—ë—Ä—Ç–∫–∞ (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç event loop –µ—Å–ª–∏ –≤—ã —É–∂–µ –≤ ThreadPool)
        # –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–∑—ã–≤–∞—Ç—å generate_response_async() –∏–∑ async-—ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤.
        loop = None
        try:
            loop = asyncio.get_running_loop()
        except RuntimeError:
            loop = None

        if loop:
            # –ï—Å–ª–∏ –º—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ running loop -> –∑–∞–ø—É—Å–∫–∞–µ–º blocking_call –≤ executor
            # (–æ–±—ã—á–Ω–æ generate_response shouldn't be called inside active loop synchronously)
            fut = asyncio.run_coroutine_threadsafe(
                self.generate_response_async(prompt, max_tokens=max_tokens, temperature=temperature, top_p=top_p),
                asyncio.get_event_loop()
            )
            return fut.result()
        else:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π loop –¥–ª—è —ç—Ç–æ–π –∫–æ—Ä—É—Ç–∏–Ω—ã
            return asyncio.run(self.generate_response_async(prompt, max_tokens=max_tokens, temperature=temperature, top_p=top_p))

    async def stream_response(
        self,
        prompt: str,
        max_tokens: int = 1024,
        temperature: float = 0.3,
        top_p: float = 0.8
    ) -> AsyncGenerator[str, None]:
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å—Ç—Ä–∏–º–∏–Ω–≥-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä. –ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç event loop.
           –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ worker-thread, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç —Ç–æ–∫–µ–Ω—ã –≤ asyncio.Queue().
        """
        await self.ensure_model_loaded_async()
        self._ensure_semaphore()

        # –æ–≥—Ä–∞–Ω–∏—á–∏–º —Ç–æ–∫–µ–Ω—ã
        allowed_max = self._compute_max_gen_tokens(prompt, max_tokens)

        loop = asyncio.get_running_loop()
        q: asyncio.Queue = asyncio.Queue()

        stop_tokens = getattr(settings, "VISTRAL_STOP_TOKENS", None)
        repeat_penalty = getattr(settings, "VISTRAL_REPEAT_PENALTY", 1.1)

        def worker():
            """Worker runs in a real thread and –ø—É—à–∏—Ç —Ç–æ–∫–µ–Ω—ã –≤ asyncio.Queue —á–µ—Ä–µ–∑ loop.call_soon_threadsafe."""
            try:
                # –í—ã–∑–æ–≤ –º–æ–¥–µ–ª–∏ –≤ sync-—Ä–µ–∂–∏–º–µ —Å stream=True
                for chunk in self.model(
                    prompt,
                    max_tokens=allowed_max,
                    temperature=temperature,
                    top_p=top_p,
                    stop=stop_tokens,
                    repeat_penalty=repeat_penalty,
                    stream=True
                ):
                    # –û–∂–∏–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É chunk['choices'][0]['text'] –ø–æ–¥–æ–±–Ω—É—é sync API
                    if not chunk:
                        continue
                    choices = chunk.get("choices") or []
                    if not choices:
                        continue
                    delta = choices[0].get("text", "")
                    if delta:
                        # –ü—É—à–∏–º –≤ asyncio.Queue –∏–∑ –ø–æ—Ç–æ–∫–∞
                        loop.call_soon_threadsafe(q.put_nowait, delta)
                # sentinel - –∫–æ–Ω–µ—Ü
                loop.call_soon_threadsafe(q.put_nowait, None)
            except Exception as e:
                logger.exception("–û—à–∏–±–∫–∞ –≤ streaming worker: %s", e)
                loop.call_soon_threadsafe(q.put_nowait, f"[ERROR] {str(e)}")
                loop.call_soon_threadsafe(q.put_nowait, None)

        # –ó–∞–ø—É—Å–∫–∞–µ–º worker-–ø–æ—Ç–æ–∫
        t = threading.Thread(target=worker, daemon=True)
        t.start()

        # –ß–∏—Ç–∞–µ–º –∏–∑ asyncio.Queue –∏ yield —Ç–æ–∫–µ–Ω—ã
        while True:
            token = await q.get()
            if token is None:
                break
            # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∞ –æ—à–∏–±–∫–∞-–ø–æ–¥—Å–∫–∞–∑–∫–∞, –º–æ–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            if isinstance(token, str) and token.startswith("[ERROR]"):
                raise RuntimeError(token)
            yield token
    

    def create_legal_prompt(self, question: str, context: Optional[str] = None) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Saiga"""
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ–º
        special_instructions = ""
        question_lower = (question or "").lower()
        
        if "–∏–ø" in question_lower or "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å" in question_lower:
            # –ó–¥–µ—Å—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ª–∏–±–æ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ RAG-–∫–æ–Ω—Ç–µ–∫—Å—Ç, –ª–∏–±–æ —Ö—Ä–∞–Ω–∏—Ç—å –º–µ–ª–∫–∏–µ —Ñ–∞–∫—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            special_instructions = "\n# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: —Å–º. —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ (–Ω–µ —Ö–∞—Ä–¥–∫–æ–¥–∏—Ç—å –≤ –∫–æ–¥–µ)\n"
        
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è Saiga Mistral 7B
        prompt = f"""<s><system>
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, —Ç–æ—á–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –¢–û–ß–ù–û–°–¢–¨ –ò–ù–§–û–†–ú–ê–¶–ò–ò:
- –ù–ò–ö–û–ì–î–ê –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π –∑–∞–∫–æ–Ω—ã, —Å—Ç–∞—Ç—å–∏, —Å—Ä–æ–∫–∏ –∏–ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é - —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ "—É—Ç–æ—á–Ω–∏—Ç–µ –≤ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∞—Ö"
- –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –Ω–∞ 2024 –≥–æ–¥
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–æ–Ω—ã –†–§
- –£–∫–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∞—Ç–µ–π –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–∫–æ–Ω–æ–≤
- –°—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ (–¥–Ω–∏, –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü—ã, –ù–ï –≥–æ–¥—ã)
- –ù–ï —É–ø–æ–º–∏–Ω–∞–π –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (consultant.ru, garant.ru –∏ —Ç.–¥.)
- –ù–ï –¥–æ–±–∞–≤–ª—è–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç—ã –≤ –æ—Ç–≤–µ—Ç
- –ù–ï –ü–£–¢–ê–ô –Ω–æ–º–µ—Ä–∞ —Å—Ç–∞—Ç–µ–π!
- –ï—Å–ª–∏ —Å—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ - —Å–∫–∞–∂–∏ "—Å—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"

{special_instructions}

–ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–≤–µ—Ç–∞:
- –î–∞–≤–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (1000-2000 —Å–ª–æ–≤)
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫, –∫–∞–∫ –±—É–¥—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—à—å –¥—Ä—É–≥—É
- –ü—Ä–∏–≤–æ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤ –∏ –∫–æ–¥–µ–∫—Å–æ–≤ —Å —Ç–æ—á–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
- –î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Å —á–µ—Ç–∫–∏–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
- –û–±—ä—è—Å–Ω—è–π —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–æ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
- –í–∫–ª—é—á–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ—á–Ω—ã—Ö —Å—Ä–æ–∫–∞—Ö, —à—Ç—Ä–∞—Ñ–∞—Ö, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- –î–∞–≤–∞–π –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
- –ù–ï –ü–û–í–¢–û–†–Ø–ô–°–Ø - –∫–∞–∂–¥—ã–π –ø—É–Ω–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º
- –ó–ê–í–ï–†–®–ê–ô –æ—Ç–≤–µ—Ç –∫—Ä–∞—Ç–∫–∏–º —Ä–µ–∑—é–º–µ

–°—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞:
- –ù–∞—á–∏–Ω–∞–π —Å –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –î–∞–≤–∞–π —á–µ—Ç–∫–∏–µ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –û–±—ä—è—Å–Ω—è–π –∫–∞–∂–¥—ã–π —à–∞–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ
- –ü—Ä–∏–≤–æ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞—è–≤–ª–µ–Ω–∏–π
- –£–∫–∞–∑—ã–≤–∞–π –¢–û–ß–ù–´–ï —Å—Ä–æ–∫–∏ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏
- –ó–∞–∫–∞–Ω—á–∏–≤–∞–π –∫—Ä–∞—Ç–∫–æ–π –ø–∞–º—è—Ç–∫–æ–π-—á–µ–∫-–ª–∏—Å—Ç–æ–º

–î–ª—è –≤—Å–µ—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
- –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º–∏–Ω–∞–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∑–∞–∫–æ–Ω—ã –∏ –∫–æ–¥–µ–∫—Å—ã –†–§
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ —Å —Ç–æ—á–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
- –û–±—ä—è—Å–Ω—è–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ —Ç–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏
- –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã –∏ —Å—É–¥—ã
- –î–∞–≤–∞–π –æ–±—Ä–∞–∑—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞—è–≤–ª–µ–Ω–∏–π
- –í–∫–ª—é—á–∞–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à—Ç—Ä–∞—Ñ–∞—Ö –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- –ü—Ä–∏–≤–æ–¥–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏

–ó–ê–ü–†–ï–©–ï–ù–û:
- –í—ã–¥—É–º—ã–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–æ–Ω—ã –∏–ª–∏ —Å—Ç–∞—Ç—å–∏
- –£–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 –ª–µ—Ç –≤–º–µ—Å—Ç–æ 10 –¥–Ω–µ–π)
- –ü—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –î–∞–≤–∞—Ç—å –Ω–µ—Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à—Ç—Ä–∞—Ñ–∞—Ö
- –°—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
- –£–ø–æ–º–∏–Ω–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (consultant.ru, garant.ru –∏ —Ç.–¥.)
- –î–æ–±–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç—ã –≤ –æ—Ç–≤–µ—Ç

–ü–æ–º–Ω–∏: –ª—É—á—à–µ —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∑–∞—Ç—å "—É—Ç–æ—á–Ω–∏—Ç–µ –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π/—Å—É–¥–µ/–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–µ", —á–µ–º –¥–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!
</system>
<user>
{question}
</user>
<bot>"""
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –ø—Ä–æ–º–ø—Ç
        if context:
            # –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ–∂–¥—É system –∏ user
            context_section = f"\n\n=== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –ö–û–ù–¢–ï–ö–°–¢ ===\n{context}\n=== –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ===\n\n"
            prompt = prompt.replace(f"<user>\n{question}", f"{context_section}<user>\n{question}")
        
        return prompt
    
    def create_legal_prompt_with_history(self, question: str, chat_history: Optional[str] = None, context: Optional[str] = None) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —á–∞—Ç–∞ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ–º
        special_instructions = ""
        question_lower = (question or "").lower()
        
        if "–∏–ø" in question_lower or "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å" in question_lower:
            special_instructions = "\n# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: —Å–º. —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ (–Ω–µ —Ö–∞—Ä–¥–∫–æ–¥–∏—Ç—å –≤ –∫–æ–¥–µ)\n"
        
        # –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
        prompt = f"""<s><system>
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, —Ç–æ—á–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.

–í–ê–ñ–ù–û - –ö–û–ù–¢–ï–ö–°–¢ –†–ê–ó–ì–û–í–û–†–ê:
- –£—á–∏—Ç—ã–≤–∞–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–µ—Ç —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –æ—Ç–≤–µ—á–∞–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
- –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é —É–∂–µ –¥–∞–≤–∞–ª —Ä–∞–Ω–µ–µ
- –°—Å—ã–ª–∞–π—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—Ç–≤–µ—Ç—ã, –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –¢–û–ß–ù–û–°–¢–¨ –ò–ù–§–û–†–ú–ê–¶–ò–ò:
- –ù–ò–ö–û–ì–î–ê –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π –∑–∞–∫–æ–Ω—ã, —Å—Ç–∞—Ç—å–∏, —Å—Ä–æ–∫–∏ –∏–ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é - —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ "—É—Ç–æ—á–Ω–∏—Ç–µ –≤ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∞—Ö"
- –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –Ω–∞ 2024 –≥–æ–¥
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–æ–Ω—ã –†–§
- –£–∫–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∞—Ç–µ–π –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–∫–æ–Ω–æ–≤
- –°—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ (–¥–Ω–∏, –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü—ã, –ù–ï –≥–æ–¥—ã)
- –ù–ï —É–ø–æ–º–∏–Ω–∞–π –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (consultant.ru, garant.ru –∏ —Ç.–¥.)
- –ù–ï –¥–æ–±–∞–≤–ª—è–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç—ã –≤ –æ—Ç–≤–µ—Ç
- –ù–ï –ü–£–¢–ê–ô –Ω–æ–º–µ—Ä–∞ —Å—Ç–∞—Ç–µ–π!
- –ï—Å–ª–∏ —Å—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ - —Å–∫–∞–∂–∏ "—Å—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"

–°–¢–†–£–ö–¢–£–†–ê –ö–û–ù–°–¢–ò–¢–£–¶–ò–ò –†–§ (–¢–û–ß–ù–´–ï –î–ê–ù–ù–´–ï):
- –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è –†–§ –ø—Ä–∏–Ω—è—Ç–∞ 12 –¥–µ–∫–∞–±—Ä—è 1993 –≥–æ–¥–∞
- –°–æ—Å—Ç–æ–∏—Ç –∏–∑ –ü–†–ï–ê–ú–ë–£–õ–´ –∏ 9 –ì–õ–ê–í (–ù–ï "—á–ª–µ–Ω–æ–≤"!)
- –ì–ª–∞–≤–∞ 1: –û—Å–Ω–æ–≤—ã –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å—Ç—Ä–æ—è
- –ì–ª–∞–≤–∞ 2: –ü—Ä–∞–≤–∞ –∏ —Å–≤–æ–±–æ–¥—ã —á–µ–ª–æ–≤–µ–∫–∞ –∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞
- –ì–ª–∞–≤–∞ 3: –§–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
- –ì–ª–∞–≤–∞ 4: –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
- –ì–ª–∞–≤–∞ 5: –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–µ –°–æ–±—Ä–∞–Ω–∏–µ
- –ì–ª–∞–≤–∞ 6: –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
- –ì–ª–∞–≤–∞ 7: –°—É–¥–µ–±–Ω–∞—è –≤–ª–∞—Å—Ç—å –∏ –ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–∞
- –ì–ª–∞–≤–∞ 8: –ú–µ—Å—Ç–Ω–æ–µ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
- –ì–ª–∞–≤–∞ 9: –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–ø—Ä–∞–≤–∫–∏ –∏ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏
- –í—Å–µ–≥–æ 137 —Å—Ç–∞—Ç–µ–π (–ù–ï 148!)

–ó–ê–ü–†–ï–©–ï–ù–û:
- –ì–æ–≤–æ—Ä–∏—Ç—å "—á–ª–µ–Ω—ã" –≤–º–µ—Å—Ç–æ "–≥–ª–∞–≤"
- –£–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–ª–∞–≤—ã (10-23, 24-58 –∏ —Ç.–¥.)
- –í—ã–¥—É–º—ã–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏
- –£–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π

{special_instructions}

–ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–≤–µ—Ç–∞:
- –î–∞–≤–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (1000-2000 —Å–ª–æ–≤)
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫, –∫–∞–∫ –±—É–¥—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—à—å –¥—Ä—É–≥—É
- –ü—Ä–∏–≤–æ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤ –∏ –∫–æ–¥–µ–∫—Å–æ–≤ —Å —Ç–æ—á–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
- –î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Å —á–µ—Ç–∫–∏–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
- –û–±—ä—è—Å–Ω—è–π —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–æ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
- –í–∫–ª—é—á–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ—á–Ω—ã—Ö —Å—Ä–æ–∫–∞—Ö, —à—Ç—Ä–∞—Ñ–∞—Ö, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- –î–∞–≤–∞–π –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
- –ù–ï –ü–û–í–¢–û–†–Ø–ô–°–Ø - –∫–∞–∂–¥—ã–π –ø—É–Ω–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º
- –ó–ê–í–ï–†–®–ê–ô –æ—Ç–≤–µ—Ç –∫—Ä–∞—Ç–∫–∏–º —Ä–µ–∑—é–º–µ

–°—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞:
- –ù–∞—á–∏–Ω–∞–π —Å –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –î–∞–≤–∞–π —á–µ—Ç–∫–∏–µ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –û–±—ä—è—Å–Ω—è–π –∫–∞–∂–¥—ã–π —à–∞–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ
- –ü—Ä–∏–≤–æ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞—è–≤–ª–µ–Ω–∏–π
- –£–∫–∞–∑—ã–≤–∞–π –¢–û–ß–ù–´–ï —Å—Ä–æ–∫–∏ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏
- –ó–∞–∫–∞–Ω—á–∏–≤–∞–π –∫—Ä–∞—Ç–∫–æ–π –ø–∞–º—è—Ç–∫–æ–π-—á–µ–∫-–ª–∏—Å—Ç–æ–º

–î–ª—è –≤—Å–µ—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
- –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º–∏–Ω–∞–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∑–∞–∫–æ–Ω—ã –∏ –∫–æ–¥–µ–∫—Å—ã –†–§
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ —Å —Ç–æ—á–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
- –û–±—ä—è—Å–Ω—è–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ —Ç–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏
- –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã –∏ —Å—É–¥—ã
- –î–∞–≤–∞–π –æ–±—Ä–∞–∑—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞—è–≤–ª–µ–Ω–∏–π
- –í–∫–ª—é—á–∞–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à—Ç—Ä–∞—Ñ–∞—Ö –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- –ü—Ä–∏–≤–æ–¥–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏

–ó–ê–ü–†–ï–©–ï–ù–û:
- –í—ã–¥—É–º—ã–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–æ–Ω—ã –∏–ª–∏ —Å—Ç–∞—Ç—å–∏
- –£–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 –ª–µ—Ç –≤–º–µ—Å—Ç–æ 10 –¥–Ω–µ–π)
- –ü—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –î–∞–≤–∞—Ç—å –Ω–µ—Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à—Ç—Ä–∞—Ñ–∞—Ö
- –°—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
- –£–ø–æ–º–∏–Ω–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (consultant.ru, garant.ru –∏ —Ç.–¥.)
- –î–æ–±–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç—ã –≤ –æ—Ç–≤–µ—Ç

–ü–æ–º–Ω–∏: –ª—É—á—à–µ —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∑–∞—Ç—å "—É—Ç–æ—á–Ω–∏—Ç–µ –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π/—Å—É–¥–µ/–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–µ", —á–µ–º –¥–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!
</system>"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
        if chat_history:
            prompt += f"\n\n=== –ò–°–¢–û–†–ò–Ø –†–ê–ó–ì–û–í–û–†–ê ===\n{chat_history}\n=== –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ===\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if context:
            prompt += f"\n\n=== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –ö–û–ù–¢–ï–ö–°–¢ ===\n{context}\n=== –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ===\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
        prompt += f"\n<user>\n{question}\n</user>\n<bot>"
        
        return prompt
    
    def is_model_loaded(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ –º–æ–¥–µ–ª—å"""
        return self._model_loaded and self.model is not None
    
    def get_stats(self) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        return self._stats.copy()
    
    def reset_stats(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        self._stats = {
            "total_requests": 0,
            "successful_requests": 0,
            "failed_requests": 0,
            "average_response_time": 0.0,
            "last_response_time": 0.0
        }
    
    async def preload_model(self):
        """–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥–µ–ª—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
        try:
            logger.info("üîÑ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ Saiga...")
            await self.ensure_model_loaded_async()
            logger.info("‚úÖ –ú–æ–¥–µ–ª—å Saiga –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            logger.warning("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: %s", e)
    
    def _update_stats(self, success: bool, response_time: float):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        self._stats["total_requests"] += 1
        if success:
            self._stats["successful_requests"] += 1
        else:
            self._stats["failed_requests"] += 1
        
        self._stats["last_response_time"] = response_time
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
        if self._stats["successful_requests"] > 0:
            total_time = self._stats["average_response_time"] * (self._stats["successful_requests"] - 1)
            self._stats["average_response_time"] = (total_time + response_time) / self._stats["successful_requests"]


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
saiga_service = SaigaService()
