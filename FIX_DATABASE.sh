#!/bin/bash

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• POSTGRESQL"
echo "====================================="

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
POSTGRES_USER="${POSTGRES_USER:-advakod}"
POSTGRES_PASSWORD="${POSTGRES_PASSWORD:-StrongPassword123}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–æ–ª—å –∏–∑ docker-compose.yml
POSTGRES_DB="${POSTGRES_DB:-advakod_db}"
COMPOSE_PROJECT_NAME="${COMPOSE_PROJECT_NAME:-advakod}"
DOCKER_COMPOSE_CMD="${DOCKER_COMPOSE_CMD:-docker-compose}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [[ -z "$POSTGRES_PASSWORD" ]]; then
    echo "‚ùå ERROR: POSTGRES_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
$DOCKER_COMPOSE_CMD stop backend postgres || true

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
read -p "‚ö†Ô∏è  –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –£–î–ê–õ–ò–¢–¨ –í–°–ï –î–ê–ù–ù–´–ï –±–∞–∑—ã? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 1
fi

# –£–¥–∞–ª—è–µ–º —Ç–æ–º (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è)
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–º–∞ PostgreSQL..."
if docker volume ls | grep -q "${COMPOSE_PROJECT_NAME}_postgres_data"; then
    docker volume rm "${COMPOSE_PROJECT_NAME}_postgres_data"
else
    echo "‚ÑπÔ∏è  –¢–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º postgres
echo "üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL..."
$DOCKER_COMPOSE_CMD up -d postgres

# –û–∂–∏–¥–∞–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PostgreSQL..."
for i in {1..30}; do
    if docker exec "${COMPOSE_PROJECT_NAME}_postgres" pg_isready -U postgres >/dev/null 2>&1; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
        break
    fi
    echo "‚è±Ô∏è  –ü–æ–ø—ã—Ç–∫–∞ $i/30..."
    sleep 2
done

# –°–æ–∑–¥–∞–Ω–∏–µ –ë–î –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec "${COMPOSE_PROJECT_NAME}_postgres" psql -U postgres -c "
    CREATE USER ${POSTGRES_USER} WITH PASSWORD '${POSTGRES_PASSWORD}';
    CREATE DATABASE ${POSTGRES_DB} OWNER ${POSTGRES_USER};
    GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO ${POSTGRES_USER};
    \c ${POSTGRES_DB};
    GRANT ALL ON SCHEMA public TO ${POSTGRES_USER};
" || {
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î"
    exit 1
}

# –ó–∞–ø—É—Å–∫ backend
echo "üöÄ –ó–∞–ø—É—Å–∫ backend..."
$DOCKER_COMPOSE_CMD up -d backend

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend..."
for i in {1..20}; do
    if curl -f http://localhost:8000/health >/dev/null 2>&1; then
        echo "‚úÖ Backend –≥–æ—Ç–æ–≤"
        break
    fi
    echo "‚è±Ô∏è  –ü–æ–ø—ã—Ç–∫–∞ $i/20..."
    sleep 3
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
docker exec "${COMPOSE_PROJECT_NAME}_backend" python -c "
import os
import psycopg2
import requests
try:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
    conn = psycopg2.connect(
        host='${COMPOSE_PROJECT_NAME}_postgres',
        database='${POSTGRES_DB}',
        user='${POSTGRES_USER}',
        password='${POSTGRES_PASSWORD}'
    )
    print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: OK')
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    resp = requests.get('http://localhost:8000/health', timeout=10)
    if resp.status_code == 200:
        print('‚úÖ Health endpoint: OK')
    else:
        print(f'‚ùå Health endpoint: {resp.status_code}')
        
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ready endpoint  
    resp = requests.get('http://localhost:8000/ready', timeout=10)
    if resp.status_code == 200:
        print('‚úÖ Ready endpoint: OK')
    else:
        print(f'‚ö†Ô∏è Ready endpoint: {resp.status_code}')
        
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}')
    exit(1)
"

echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê –°–∞–π—Ç: https://advacodex.com"
echo "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs -f"