#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–¥–µ–∫—Å–æ–≤
# –ê–≤—Ç–æ—Ä: –ê–î–í–ê–ö–û–î Team
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SYSTEM_NAME="unified_codex_system"
LOG_DIR="/root/advakod/unified_codexes/logs"
STATUS_FILE="/root/advakod/unified_codexes/status.json"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service_status() {
    log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ $SYSTEM_NAME..."
    
    if systemctl is-active --quiet $SYSTEM_NAME; then
        log_success "‚úÖ –°–µ—Ä–≤–∏—Å $SYSTEM_NAME –∞–∫—Ç–∏–≤–µ–Ω"
        
        # –ü–æ–ª—É—á–∞–µ–º PID
        PID=$(systemctl show -p MainPID --value $SYSTEM_NAME)
        log_info "üìä PID –ø—Ä–æ—Ü–µ—Å—Å–∞: $PID"
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
        MEMORY=$(ps -o rss= -p $PID 2>/dev/null | awk '{print $1/1024 " MB"}' || echo "N/A")
        log_info "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: $MEMORY"
        
        return 0
    else
        log_error "‚ùå –°–µ—Ä–≤–∏—Å $SYSTEM_NAME –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
check_downloaded_files() {
    log_info "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    CODEXES_DIR="/root/advakod/unified_codexes/codexes"
    
    if [ -d "$CODEXES_DIR" ]; then
        FILE_COUNT=$(find "$CODEXES_DIR" -name "*.pdf" | wc -l)
        TOTAL_SIZE=$(du -sh "$CODEXES_DIR" 2>/dev/null | cut -f1 || echo "0")
        
        log_info "üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ PDF —Ñ–∞–π–ª–æ–≤: $FILE_COUNT"
        log_info "üíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $TOTAL_SIZE"
        
        if [ $FILE_COUNT -gt 0 ]; then
            log_success "‚úÖ –§–∞–π–ª—ã –∫–æ–¥–µ–∫—Å–æ–≤ –Ω–∞–π–¥–µ–Ω—ã"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–∞–π–ª—ã
            log_info "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–∞–π–ª—ã:"
            find "$CODEXES_DIR" -name "*.pdf" -printf "%T@ %p\n" | sort -nr | head -5 | while read timestamp filepath; do
                filename=$(basename "$filepath")
                filedate=$(date -d "@$timestamp" "+%Y-%m-%d %H:%M:%S")
                log_info "  - $filename ($filedate)"
            done
        else
            log_warning "‚ö†Ô∏è PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        log_error "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–¥–µ–∫—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $CODEXES_DIR"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
check_logs() {
    log_info "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
    
    if [ -d "$LOG_DIR" ]; then
        LOG_FILES=$(find "$LOG_DIR" -name "*.log" | wc -l)
        log_info "üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤: $LOG_FILES"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        LATEST_LOG=$(find "$LOG_DIR" -name "*.log" -printf "%T@ %p\n" | sort -nr | head -1 | cut -d' ' -f2-)
        
        if [ -n "$LATEST_LOG" ] && [ -f "$LATEST_LOG" ]; then
            log_info "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ $(basename "$LATEST_LOG"):"
            tail -5 "$LATEST_LOG" | while read line; do
                log_info "  $line"
            done
        fi
    else
        log_warning "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $LOG_DIR"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
check_system_status() {
    log_info "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    if [ -f "$STATUS_FILE" ]; then
        log_info "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        if command -v jq >/dev/null 2>&1; then
            jq -r '.download.total_files, .integration.integrated_files, .integration.total_chunks' "$STATUS_FILE" 2>/dev/null | while read total_files; do
                read integrated_files
                read total_chunks
                log_info "  üìÑ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $total_files"
                log_info "  üîó –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ: $integrated_files"
                log_info "  üìù –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: $total_chunks"
            done
        else
            log_info "  üìÑ –°—Ç–∞—Ç—É—Å —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: $STATUS_FILE"
        fi
    else
        log_warning "‚ö†Ô∏è –§–∞–π–ª —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $STATUS_FILE"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
check_performance() {
    log_info "‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
    CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
    log_info "üñ•Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU: ${CPU_USAGE}%"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
    MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
    log_info "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${MEMORY_USAGE}%"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
    DISK_USAGE=$(df -h /root/advakod | tail -1 | awk '{print $5}')
    log_info "üíΩ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: $DISK_USAGE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_network() {
    log_info "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    
    if ping -c 1 pravo.gov.ru >/dev/null 2>&1; then
        log_success "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ pravo.gov.ru –¥–æ—Å—Ç—É–ø–Ω–æ"
    else
        log_error "‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ pravo.gov.ru –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –∫–æ–¥–µ–∫—Å–æ–≤ –ê–î–í–ê–ö–û–î"
    log_info "========================================"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    check_service_status
    echo ""
    
    check_downloaded_files
    echo ""
    
    check_logs
    echo ""
    
    check_system_status
    echo ""
    
    check_performance
    echo ""
    
    check_network
    echo ""
    
    log_success "üéâ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "service")
        check_service_status
        ;;
    "files")
        check_downloaded_files
        ;;
    "logs")
        check_logs
        ;;
    "status")
        check_system_status
        ;;
    "performance")
        check_performance
        ;;
    "network")
        check_network
        ;;
    *)
        main
        ;;
esac



