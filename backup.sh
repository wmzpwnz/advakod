#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ê–î–í–ê–ö–û–î
# –ê–≤—Ç–æ—Ä: –ê–î–í–ê–ö–û–î AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ü–¶–ò–ò:"
    echo "  -h, --help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  -p, --postgres      –°–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—ç–∫–∞–ø PostgreSQL"
    echo "  -q, --qdrant        –°–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—ç–∫–∞–ø Qdrant"
    echo "  -c, --config        –°–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "  -a, --all           –°–æ–∑–¥–∞—Ç—å –≤—Å–µ –±—ç–∫–∞–ø—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  -t, --test          –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤)"
    echo "  -f, --force         –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ (–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏)"
    echo ""
    echo "–ü–†–ò–ú–ï–†–´:"
    echo "  $0                  # –°–æ–∑–¥–∞—Ç—å –≤—Å–µ –±—ç–∫–∞–ø—ã"
    echo "  $0 --postgres       # –¢–æ–ª—å–∫–æ PostgreSQL"
    echo "  $0 --test           # –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"
    echo "  $0 --force          # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local missing_deps=()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker >/dev/null 2>&1; then
        missing_deps+=("docker")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose >/dev/null 2>&1; then
        missing_deps+=("docker-compose")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ curl
    if ! command -v curl >/dev/null 2>&1; then
        missing_deps+=("curl")
    fi
    
    if [ ${#missing_deps[@]} -gt 0 ]; then
        error "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing_deps[*]}"
        error "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É"
    exit 1
fi

    success "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_containers() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    local containers=("advakod_postgres" "advakod_qdrant" "advakod_redis")
    local all_running=true
    
    for container in "${containers[@]}"; do
        if docker ps --format "table {{.Names}}" | grep -q "^${container}$"; then
            success "‚úÖ ${container} –∑–∞–ø—É—â–µ–Ω"
        else
            error "‚ùå ${container} –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            all_running=false
        fi
    done
    
    if [ "${all_running}" = false ]; then
        error "‚ùå –ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
        warning "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose -f docker-compose.prod.yml up -d"
    exit 1
fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ PostgreSQL
backup_postgres() {
    log "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ PostgreSQL..."
    
    if [ "${TEST_MODE}" = true ]; then
        log "üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: PostgreSQL –±—ç–∫–∞–ø –ø—Ä–æ–ø—É—â–µ–Ω"
        return 0
    fi
    
    if docker run --rm \
        --network advakod_advakod_network \
        -v "$(pwd)/backups:/backups" \
        -v "$(pwd)/scripts:/scripts:ro" \
        -e POSTGRES_HOST=postgres \
        -e POSTGRES_PORT=5432 \
        -e POSTGRES_DB=advakod_db \
        -e POSTGRES_USER=advakod \
        -e POSTGRES_PASSWORD="${POSTGRES_PASSWORD}" \
        -e MAX_BACKUPS=30 \
        postgres:15-alpine \
        bash -c "
            apk add --no-cache curl jq bc
            /scripts/backup_postgres.sh
        "; then
        success "‚úÖ PostgreSQL –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞ PostgreSQL"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ Qdrant
backup_qdrant() {
    log "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Qdrant..."
    
    if [ "${TEST_MODE}" = true ]; then
        log "üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: Qdrant –±—ç–∫–∞–ø –ø—Ä–æ–ø—É—â–µ–Ω"
        return 0
    fi
    
    if docker run --rm \
        --network advakod_advakod_network \
        -v "$(pwd)/backups:/backups" \
        -v "$(pwd)/scripts:/scripts:ro" \
        -e QDRANT_HOST=qdrant \
        -e QDRANT_PORT=6333 \
        -e MAX_BACKUPS=30 \
        alpine:latest \
        sh -c "
            apk add --no-cache curl jq bc bash
            /scripts/backup_qdrant.sh
        "; then
        success "‚úÖ Qdrant –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞ Qdrant"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
backup_config() {
    log "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if [ "${TEST_MODE}" = true ]; then
        log "üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—ç–∫–∞–ø –ø—Ä–æ–ø—É—â–µ–Ω"
        return 0
    fi
    
    local timestamp=$(date '+%Y%m%d_%H%M%S')
    local config_backup="backups/advakod_config_${timestamp}.tar.gz"
    
    if tar -czf "${config_backup}" \
        docker-compose.prod.yml \
        nginx.conf \
        env.production \
        scripts/ \
        2>/dev/null; then
        
        success "‚úÖ –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: $(basename "${config_backup}")"
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        local file_size=$(du -h "${config_backup}" | cut -f1)
        log "üìè –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${file_size}"
        
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_statistics() {
    log "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—ç–∫–∞–ø–æ–≤:"
    
    local backup_dir="backups"
    if [ -d "${backup_dir}" ]; then
        echo "  üìÅ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $(du -sh "${backup_dir}" | cut -f1)"
        echo "  üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: $(find "${backup_dir}" -type f | wc -l)"
        echo "  üóÑÔ∏è PostgreSQL –±—ç–∫–∞–ø–æ–≤: $(find "${backup_dir}" -name "advakod_postgres_*.sql.gz" | wc -l)"
        echo "  üîç Qdrant –±—ç–∫–∞–ø–æ–≤: $(find "${backup_dir}" -name "advakod_qdrant_*.json.gz" | wc -l)"
        echo "  ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: $(find "${backup_dir}" -name "advakod_config_*.tar.gz" | wc -l)"
    else
        warning "‚ö†Ô∏è –ü–∞–ø–∫–∞ –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local start_time=$(date +%s)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    local backup_postgres_flag=false
    local backup_qdrant_flag=false
    local backup_config_flag=false
    local backup_all_flag=true
    TEST_MODE=false
    FORCE_MODE=false
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_help
                exit 0
                ;;
            -p|--postgres)
                backup_postgres_flag=true
                backup_all_flag=false
                shift
                ;;
            -q|--qdrant)
                backup_qdrant_flag=true
                backup_all_flag=false
                shift
                ;;
            -c|--config)
                backup_config_flag=true
                backup_all_flag=false
                shift
                ;;
            -a|--all)
                backup_all_flag=true
                shift
                ;;
            -t|--test)
                TEST_MODE=true
                shift
                ;;
            -f|--force)
                FORCE_MODE=true
                shift
                ;;
            *)
                error "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
                show_help
                exit 1
                ;;
        esac
    done
    
    log "üöÄ –ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ê–î–í–ê–ö–û–î"
    log "=============================================="
    
    if [ "${TEST_MODE}" = true ]; then
        warning "üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú - —Ñ–∞–π–ª—ã –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º)
    if [ "${FORCE_MODE}" = false ]; then
        check_dependencies
        check_containers
    fi
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ -f "env.production" ]; then
        source env.production
    else
        error "‚ùå –§–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    local backup_success=true
    local failed_services=""
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—ç–∫–∞–ø–æ–≤
    if [ "${backup_all_flag}" = true ] || [ "${backup_postgres_flag}" = true ]; then
        if ! backup_postgres; then
            backup_success=false
            failed_services="${failed_services} PostgreSQL"
        fi
    fi
    
    if [ "${backup_all_flag}" = true ] || [ "${backup_qdrant_flag}" = true ]; then
        if ! backup_qdrant; then
            backup_success=false
            failed_services="${failed_services} Qdrant"
        fi
    fi
    
    if [ "${backup_all_flag}" = true ] || [ "${backup_config_flag}" = true ]; then
        if ! backup_config; then
            backup_success=false
            failed_services="${failed_services} Config"
        fi
    fi
    
    # –ü–æ–¥—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    local duration_formatted=$(printf '%02d:%02d:%02d' $((duration/3600)) $((duration%3600/60)) $((duration%60)))
    
    # –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    show_statistics
    
    if [ "${backup_success}" = true ]; then
        success "üéâ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ –∑–∞ ${duration_formatted}"
        if [ "${TEST_MODE}" = true ]; then
            warning "üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - —Ñ–∞–π–ª—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
        fi
    else
        error "‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–æ–≤:${failed_services}"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 130' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"