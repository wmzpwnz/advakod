#!/bin/bash

# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ A2codex.com –Ω–∞ production —Å–µ—Ä–≤–µ—Ä
# –°–µ—Ä–≤–µ—Ä: 31.130.145.75
# –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ë–∞–≥–±–µ–∫–æ–≤ –ê–∑–∏–∑ | –ö–æ–º–ø–∞–Ω–∏—è "–ê–≤—Ä–∞–º–∏—Ä"

set -e

SERVER="31.130.145.75"
SERVER_USER="root"
SERVER_PASS="pG4Ju#i+i5+UPd"
SERVER_PATH="/opt/a2codex"
PROJECT_NAME="a2codex"

echo "üöÄ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ A2codex.com"
echo "=================================================="
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!"
echo "–°–µ—Ä–≤–µ—Ä: $SERVER"
echo "–ü—É—Ç—å: $SERVER_PATH"
echo ""

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " confirm
if [ "$confirm" != "yes" ]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

echo ""
echo -e "${BLUE}üì¶ –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞${NC}"

# –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
tar -czf ${PROJECT_NAME}.tar.gz \
  --exclude='node_modules' \
  --exclude='venv' \
  --exclude='__pycache__' \
  --exclude='.git' \
  --exclude='*.pyc' \
  --exclude='.DS_Store' \
  --exclude='backend/logs/*' \
  --exclude='backend/uploads/*' \
  --exclude='backend/data/chroma_db/*' \
  --exclude='backend/*.db' \
  --exclude='frontend/build' \
  .

echo -e "${GREEN}‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω${NC}"

echo -e "${BLUE}üóëÔ∏è  –®–∞–≥ 2: –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ${NC}"

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
sshpass -p "$SERVER_PASS" ssh ${SERVER_USER}@${SERVER} << 'ENDSSH'

set -e

echo "üóëÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø—É—â–µ–Ω—ã
systemctl stop a2codex-backend 2>/dev/null || echo "–°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω"
systemctl disable a2codex-backend 2>/dev/null || echo "–°–µ—Ä–≤–∏—Å –Ω–µ –±—ã–ª –≤–∫–ª—é—á–µ–Ω"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã
pkill -f "python.*main.py" 2>/dev/null || echo "–ü—Ä–æ—Ü–µ—Å—Å—ã Python –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
pkill -f "uvicorn" 2>/dev/null || echo "Uvicorn –Ω–µ –∑–∞–ø—É—â–µ–Ω"

echo "‚úÖ –°—Ç–∞—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# –°–æ–∑–¥–∞–µ–º backup –µ—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -d "/opt/a2codex" ]; then
    BACKUP_DIR="/opt/backups/a2codex_$(date +%Y%m%d_%H%M%S)"
    mkdir -p /opt/backups
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ backup –≤ $BACKUP_DIR..."
    mv /opt/a2codex $BACKUP_DIR
    echo "‚úÖ Backup —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR"
else
    echo "–°—Ç–∞—Ä–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º backup"
fi

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π systemd —Å–µ—Ä–≤–∏—Å
rm -f /etc/systemd/system/a2codex-backend.service
rm -f /etc/systemd/system/advakod-backend.service
systemctl daemon-reload

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
rm -f /etc/nginx/sites-enabled/a2codex
rm -f /etc/nginx/sites-enabled/advakod
rm -f /etc/nginx/sites-available/a2codex
rm -f /etc/nginx/sites-available/advakod

echo "‚úÖ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

ENDSSH

echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –æ—á–∏—â–µ–Ω${NC}"

echo -e "${BLUE}üì§ –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞${NC}"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤
sshpass -p "$SERVER_PASS" scp ${PROJECT_NAME}.tar.gz ${SERVER_USER}@${SERVER}:/tmp/

echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –∑–∞–≥—Ä—É–∂–µ–Ω${NC}"

echo -e "${BLUE}üîß –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞${NC}"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
sshpass -p "$SERVER_PASS" ssh ${SERVER_USER}@${SERVER} << 'ENDSSH'

set -e

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
mkdir -p /opt/a2codex
cd /opt/a2codex

# –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞..."
tar -xzf /tmp/a2codex.tar.gz -C /opt/a2codex
rm /tmp/a2codex.tar.gz

echo "‚úÖ –ü—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt-get update -qq

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
command -v python3 >/dev/null 2>&1 || apt-get install -y python3 python3-pip python3-venv
command -v node >/dev/null 2>&1 || apt-get install -y nodejs npm
command -v nginx >/dev/null 2>&1 || apt-get install -y nginx
command -v redis-server >/dev/null 2>&1 || apt-get install -y redis-server
command -v psql >/dev/null 2>&1 || apt-get install -y postgresql postgresql-contrib

echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
echo "üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL..."
systemctl start postgresql
systemctl enable postgresql

sudo -u postgres psql << 'SQLEOF'
-- –°–æ–∑–¥–∞–µ–º –ë–î –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
SELECT 'CREATE DATABASE a2codex_db' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'a2codex_db')\gexec

-- –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$
BEGIN
  IF NOT EXISTS (SELECT FROM pg_user WHERE usename = 'a2codex') THEN
    CREATE USER a2codex WITH PASSWORD 'a2codex_secure_pass_2025';
  END IF;
END
$$;

-- –î–∞–µ–º –ø—Ä–∞–≤–∞
GRANT ALL PRIVILEGES ON DATABASE a2codex_db TO a2codex;
SQLEOF

echo "‚úÖ PostgreSQL –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –ó–∞–ø—É—Å–∫–∞–µ–º Redis
echo "üî¥ –ó–∞–ø—É—Å–∫ Redis..."
systemctl start redis-server
systemctl enable redis-server

echo "‚úÖ Redis –∑–∞–ø—É—â–µ–Ω"

# Backend setup
echo "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend..."
cd /opt/a2codex/backend

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
python3 -m venv venv
source venv/bin/activate

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install --upgrade pip -q
pip install -r requirements.txt -q

echo "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p logs uploads data/chroma_db documents

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
cat > .env << 'EOF'
# A2codex.com Production Configuration
# –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ë–∞–≥–±–µ–∫–æ–≤ –ê–∑–∏–∑ | –ö–æ–º–ø–∞–Ω–∏—è "–ê–≤—Ä–∞–º–∏—Ä"

SECRET_KEY=a2codex_super_secret_key_production_2025_very_long_and_secure_key_here_minimum_32_chars
ENCRYPTION_KEY=a2codex_encryption_key_production_2025_very_long_and_secure_key_minimum_32_chars
DATABASE_URL=postgresql://a2codex:a2codex_secure_pass_2025@localhost/a2codex_db
ENVIRONMENT=production
DEBUG=false
REDIS_URL=redis://localhost:6379/0

# Saiga Model
SAIGA_MODEL_PATH=/opt/models/saiga_mistral_7b_q4_K.gguf
SAIGA_N_CTX=4096
SAIGA_N_THREADS=4

# CORS
CORS_ORIGINS=https://a2codex.com,https://www.a2codex.com,http://31.130.145.75,http://localhost:3000

# ChromaDB
CHROMA_DB_PATH=/opt/a2codex/backend/data/chroma_db
CHROMA_COLLECTION_NAME=legal_documents

# Project Info
PROJECT_NAME=A2codex.com
VERSION=2.0.0
EOF

echo "‚úÖ .env —Å–æ–∑–¥–∞–Ω"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üìä –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
alembic upgrade head

echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã
echo "üè∑Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º..."

# RBAC
python init_rbac.py 2>/dev/null || echo "RBAC —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"

# Feedback —Å–∏—Å—Ç–µ–º–∞
python init_feedback_system.py

echo "‚úÖ –°–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"

# Frontend setup
echo "üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend..."
cd /opt/a2codex/frontend

# –°–æ–∑–¥–∞–µ–º .env
cat > .env << 'EOF'
REACT_APP_API_URL=http://31.130.145.75
REACT_APP_WS_URL=ws://31.130.145.75
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install --silent

# –°–æ–±–∏—Ä–∞–µ–º production build
echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ production build..."
npm run build

echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
cat > /etc/nginx/sites-available/a2codex << 'NGINXCONF'
server {
    listen 80;
    server_name a2codex.com www.a2codex.com 31.130.145.75;

    # Frontend
    location / {
        root /opt/a2codex/frontend/build;
        try_files $uri $uri/ /index.html;
        
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∏
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Backend API
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 180s;
        proxy_connect_timeout 180s;
        proxy_send_timeout 180s;
    }

    # WebSocket
    location /ws/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 300s;
    }

    # Docs
    location /docs {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    client_max_body_size 50M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json;
}
NGINXCONF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
ln -sf /etc/nginx/sites-available/a2codex /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
nginx -t

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx
systemctl restart nginx
systemctl enable nginx

echo "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
cat > /etc/systemd/system/a2codex-backend.service << 'SERVICECONF'
[Unit]
Description=A2codex.com Backend API - AI Legal Assistant
After=network.target postgresql.service redis.service

[Service]
Type=simple
User=root
WorkingDirectory=/opt/a2codex/backend
Environment="PATH=/opt/a2codex/backend/venv/bin"
ExecStart=/opt/a2codex/backend/venv/bin/python main.py
Restart=always
RestartSec=10
StandardOutput=append:/opt/a2codex/backend/logs/service.log
StandardError=append:/opt/a2codex/backend/logs/service_error.log

[Install]
WantedBy=multi-user.target
SERVICECONF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
systemctl daemon-reload
systemctl enable a2codex-backend
systemctl start a2codex-backend

echo "‚úÖ Backend —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω"

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "===================="

echo "Nginx:"
systemctl is-active nginx && echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

echo "Backend:"
systemctl is-active a2codex-backend && echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

echo "Redis:"
systemctl is-active redis-server && echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

echo "PostgreSQL:"
systemctl is-active postgresql && echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API..."
curl -s http://localhost:8000/health | grep -q "healthy" && echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ö†Ô∏è API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"

echo ""
echo "üìã –õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
tail -20 /opt/a2codex/backend/logs/service.log 2>/dev/null || echo "–õ–æ–≥–∏ –ø–æ–∫–∞ –ø—É—Å—Ç—ã"

ENDSSH

echo ""
echo "=================================================="
echo -e "${GREEN}üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!${NC}"
echo "=================================================="
echo ""
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:"
echo "   http://31.130.145.75"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "   üè† –ì–ª–∞–≤–Ω–∞—è: http://31.130.145.75/"
echo "   üí¨ –ß–∞—Ç: http://31.130.145.75/chat"
echo "   üëÆ –ú–æ–¥–µ—Ä–∞—Ü–∏—è: http://31.130.145.75/moderation"
echo "   üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: http://31.130.145.75/moderation-dashboard"
echo "   üîß API Docs: http://31.130.145.75/docs"
echo "   ‚ù§Ô∏è Health: http://31.130.145.75/health"
echo ""
echo "üîê –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∞:"
echo "      ssh root@31.130.145.75"
echo "      cd /opt/a2codex/backend"
echo "      source venv/bin/activate"
echo "      python create_admin.py"
echo ""
echo "   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS:"
echo "      a2codex.com ‚Üí 31.130.145.75"
echo ""
echo "   3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL (Let's Encrypt):"
echo "      certbot --nginx -d a2codex.com -d www.a2codex.com"
echo ""
echo "   4. –ù–∞–∑–Ω–∞—á—å—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤:"
echo "   ssh root@31.130.145.75"
echo "   tail -f /opt/a2codex/backend/logs/service.log"
echo ""
echo "üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
echo "   systemctl status a2codex-backend"
echo "   systemctl restart a2codex-backend"
echo "   systemctl stop a2codex-backend"
echo ""
echo "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ë–∞–≥–±–µ–∫–æ–≤ –ê–∑–∏–∑"
echo "üè¢ –ö–æ–º–ø–∞–Ω–∏—è: –ê–≤—Ä–∞–º–∏—Ä"
echo "üåê A2codex.com"
echo "=================================================="

# –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤
rm -f ${PROJECT_NAME}.tar.gz

echo ""
echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!${NC}"
