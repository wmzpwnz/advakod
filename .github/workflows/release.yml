name: Release Images

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag
        id: meta
        run: |
          TAG=${GITHUB_REF_NAME}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "repo=${REPO_LC}" >> $GITHUB_OUTPUT
          # private registry namespace, e.g. advakod (optional)
          echo "namespace=${{ secrets.REGISTRY_NAMESPACE }}" >> $GITHUB_OUTPUT
          echo "registry_url=${{ secrets.REGISTRY_URL }}" >> $GITHUB_OUTPUT

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo }}-backend:${{ steps.meta.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-backend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-backend:buildcache,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo }}-frontend:${{ steps.meta.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-frontend:buildcache,mode=max

      - name: Emit image names
        run: |
          echo "BACKEND_IMAGE=ghcr.io/${{ steps.meta.outputs.repo }}-backend:${{ steps.meta.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "FRONTEND_IMAGE=ghcr.io/${{ steps.meta.outputs.repo }}-frontend:${{ steps.meta.outputs.tag }}" >> $GITHUB_STEP_SUMMARY

      - name: Log in to private registry
        if: ${{ steps.meta.outputs.registry_url != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.meta.outputs.registry_url }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend to private registry
        if: ${{ steps.meta.outputs.registry_url != '' }}
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.meta.outputs.registry_url }}/${{ steps.meta.outputs.namespace }}/backend:${{ steps.meta.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-backend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-backend:buildcache,mode=max

      - name: Build and push frontend to private registry
        if: ${{ steps.meta.outputs.registry_url != '' }}
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ steps.meta.outputs.registry_url }}/${{ steps.meta.outputs.namespace }}/frontend:${{ steps.meta.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ steps.meta.outputs.repo }}-frontend:buildcache,mode=max
