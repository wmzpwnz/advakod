#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è A2codex.com
# –î–∞—Ç–∞: 21.10.2025

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è A2codex.com"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "backend/main.py" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞${NC}"
    exit 1
fi

echo -e "${BLUE}üì¶ –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π${NC}"
cd backend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}‚ùå Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Python 3 –Ω–∞–π–¥–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo -e "${BLUE}üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${BLUE}üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
pip install -q --upgrade pip
pip install -q -r requirements.txt

echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# –®–∞–≥ 2: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo -e "${BLUE}üìä –®–∞–≥ 2: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ alembic –Ω–∞—Å—Ç—Ä–æ–µ–Ω
if [ ! -f "alembic.ini" ]; then
    echo -e "${RED}‚ùå alembic.ini –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
alembic upgrade head

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π${NC}"
    exit 1
fi

# –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–±–ª–µ–º
echo -e "${BLUE}üè∑Ô∏è  –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–±–ª–µ–º${NC}"

python init_feedback_system.py

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–±–ª–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π${NC}"
    exit 1
fi

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
echo -e "${BLUE}üé® –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend${NC}"
cd ../frontend

if [ ! -d "node_modules" ]; then
    echo -e "${BLUE}üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    npm install
fi

echo -e "${GREEN}‚úÖ Frontend –≥–æ—Ç–æ–≤${NC}"

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo -e "${BLUE}‚öôÔ∏è  –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏${NC}"
cd ../backend

if [ ! -f ".env" ]; then
    echo -e "${RED}‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    echo -e "${BLUE}üìù –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
    
    if [ -f "env.example" ]; then
        cp env.example .env
        echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª. –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SECRET_KEY –∏ ENCRYPTION_KEY!${NC}"
    else
        echo -e "${RED}‚ùå env.example –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if ! grep -q "SECRET_KEY=" .env || ! grep -q "ENCRYPTION_KEY=" .env; then
    echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SECRET_KEY –∏ ENCRYPTION_KEY –≤ .env —Ñ–∞–π–ª–µ!${NC}"
fi

echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞${NC}"

# –®–∞–≥ 6: –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
echo -e "${BLUE}üß™ –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏
python -c "from app.models.feedback import ResponseFeedback, ModerationReview; print('‚úÖ –ú–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')"

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
python -c "from app.api.feedback import router as feedback_router; from app.api.moderation import router as moderation_router; print('‚úÖ API —Ä–æ—É—Ç–µ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')"

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ API${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã${NC}"

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "=================================================="
echo -e "${GREEN}üéâ –°–ò–°–¢–ï–ú–ê –û–ë–†–ê–¢–ù–û–ô –°–í–Ø–ó–ò –†–ê–ó–í–ï–†–ù–£–¢–ê –£–°–ü–ï–®–ù–û!${NC}"
echo "=================================================="
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "  ‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î (6 –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü)"
echo "  ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–±–ª–µ–º (8 —à—Ç.)"
echo "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
echo "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"
echo ""
echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && python main.py"
echo "  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: cd frontend && npm start"
echo "  3. –ù–∞–∑–Ω–∞—á—å—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
echo "  4. –û—Ç–∫—Ä–æ–π—Ç–µ /moderation –¥–ª—è –Ω–∞—á–∞–ª–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "  - FEEDBACK_SYSTEM_README.md - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
echo "  - .kiro/specs/feedback-moderation-system/ - –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏"
echo ""
echo "üåê A2codex.com - –í–∞—à –ò–ò-—é—Ä–∏—Å—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo ""
echo "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ë–∞–≥–±–µ–∫–æ–≤ –ê–∑–∏–∑"
echo "üè¢ –ö–æ–º–ø–∞–Ω–∏—è: –ê–≤—Ä–∞–º–∏—Ä"
echo "=================================================="
