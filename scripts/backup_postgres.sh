#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è PostgreSQL –¥–ª—è –ê–î–í–ê–ö–û–î
# –ê–≤—Ç–æ—Ä: –ê–î–í–ê–ö–û–î AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_DIR="/backups"
POSTGRES_HOST="${POSTGRES_HOST:-postgres}"
POSTGRES_PORT="${POSTGRES_PORT:-5432}"
POSTGRES_DB="${POSTGRES_DB:-advakod_db}"
POSTGRES_USER="${POSTGRES_USER:-advakod}"
POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
MAX_BACKUPS="${MAX_BACKUPS:-30}"
BACKUP_PREFIX="advakod_postgres"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ PostgreSQL
backup_postgres() {
    local timestamp=$(date '+%Y%m%d_%H%M%S')
    local backup_file="${BACKUP_DIR}/${BACKUP_PREFIX}_${timestamp}.sql"
    local backup_file_gz="${backup_file}.gz"
    
    log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL..."
    log "üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${POSTGRES_DB}"
    log "üìÅ –§–∞–π–ª –±—ç–∫–∞–ø–∞: ${backup_file_gz}"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–∞—Ä–æ–ª—è
    export PGPASSWORD="${POSTGRES_PASSWORD}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    if pg_dump -h "${POSTGRES_HOST}" -p "${POSTGRES_PORT}" -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" \
        --verbose --no-password --format=plain --no-owner --no-privileges \
        --exclude-table-data=pg_stat_statements \
        --exclude-table-data=pg_stat_user_tables \
        --exclude-table-data=pg_stat_user_indexes \
        > "${backup_file}"; then
        
        # –°–∂–∞—Ç–∏–µ –±—ç–∫–∞–ø–∞
        if gzip "${backup_file}"; then
            success "‚úÖ PostgreSQL –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: ${backup_file_gz}"
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
            local file_size=$(du -h "${backup_file_gz}" | cut -f1)
            log "üìè –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: ${file_size}"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
            if gzip -t "${backup_file_gz}"; then
                success "‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –±—ç–∫–∞–ø–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
            else
                error "‚ùå –ë—ç–∫–∞–ø –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!"
                return 1
            fi
            
        else
            error "‚ùå –û—à–∏–±–∫–∞ —Å–∂–∞—Ç–∏—è –±—ç–∫–∞–ø–∞"
            return 1
        fi
        
    else
        error "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ PostgreSQL"
        return 1
    fi
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
    cleanup_old_backups
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–º–∞–∫—Å–∏–º—É–º ${MAX_BACKUPS} —Ñ–∞–π–ª–æ–≤)..."
    
    local backup_count=$(find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.sql.gz" | wc -l)
    
    if [ "${backup_count}" -gt "${MAX_BACKUPS}" ]; then
        local files_to_delete=$((backup_count - MAX_BACKUPS))
        log "üóëÔ∏è –£–¥–∞–ª—è–µ–º ${files_to_delete} —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
        
        find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.sql.gz" -type f -exec stat -c '%Y %n' {} \; | \
        sort -n | head -n "${files_to_delete}" | cut -d' ' -f2- | \
        while read -r file; do
            if rm -f "${file}"; then
                log "üóëÔ∏è –£–¥–∞–ª–µ–Ω: $(basename "${file}")"
            else
                warning "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: $(basename "${file}")"
            fi
        done
        
        success "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    else
        log "‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤ –≤ –Ω–æ—Ä–º–µ (${backup_count}/${MAX_BACKUPS})"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
check_postgres_connection() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
    
    export PGPASSWORD="${POSTGRES_PASSWORD}"
    
    if pg_isready -h "${POSTGRES_HOST}" -p "${POSTGRES_PORT}" -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" >/dev/null 2>&1; then
        success "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        error "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ –±—ç–∫–∞–ø–µ
create_backup_report() {
    local report_file="${BACKUP_DIR}/backup_report_$(date '+%Y%m%d').txt"
    
    log "üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –±—ç–∫–∞–ø–∞—Ö..."
    
    {
        echo "=== –û–¢–ß–ï–¢ –û –†–ï–ó–ï–†–í–ù–û–ú –ö–û–ü–ò–†–û–í–ê–ù–ò–ò –ê–î–í–ê–ö–û–î ==="
        echo "–î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "–°–∏—Å—Ç–µ–º–∞: PostgreSQL"
        echo ""
        echo "=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–≠–ö–ê–ü–û–í ==="
        echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤: $(find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.sql.gz" | wc -l)"
        echo "–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $(du -sh "${BACKUP_DIR}" | cut -f1)"
        echo ""
        echo "=== –ü–û–°–õ–ï–î–ù–ò–ï 5 –ë–≠–ö–ê–ü–û–í ==="
        find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.sql.gz" -type f -exec stat -c '%Y %n %s' {} \; | \
        sort -n | tail -5 | while read -r timestamp file size; do
            echo "$(date -d "@${timestamp}" '+%Y-%m-%d %H:%M:%S') - $(basename "${file}") - $(numfmt --to=iec "${size}")"
        done
        echo ""
        echo "=== –°–¢–ê–¢–£–° –ë–ê–ó–´ –î–ê–ù–ù–´–• ==="
        export PGPASSWORD="${POSTGRES_PASSWORD}"
        psql -h "${POSTGRES_HOST}" -p "${POSTGRES_PORT}" -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -c "
            SELECT 
                schemaname,
                tablename,
                pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size
            FROM pg_tables 
            WHERE schemaname NOT IN ('information_schema', 'pg_catalog')
            ORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC
            LIMIT 10;
        " 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ë–î"
    } > "${report_file}"
    
    success "‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${report_file}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ê–î–í–ê–ö–û–î PostgreSQL"
    log "=================================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if ! check_postgres_connection; then
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL. –í—ã—Ö–æ–¥."
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    if backup_postgres; then
        success "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        create_backup_report
        
        log "üéâ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 130' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"
