#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è Qdrant –¥–ª—è –ê–î–í–ê–ö–û–î
# –ê–≤—Ç–æ—Ä: –ê–î–í–ê–ö–û–î AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_DIR="/backups"
QDRANT_HOST="${QDRANT_HOST:-qdrant}"
QDRANT_PORT="${QDRANT_PORT:-6333}"
MAX_BACKUPS="${MAX_BACKUPS:-30}"
BACKUP_PREFIX="advakod_qdrant"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Qdrant
check_qdrant_connection() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Qdrant..."
    
    if curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/health" >/dev/null 2>&1; then
        success "‚úÖ Qdrant –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        error "‚ùå Qdrant –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
get_collections() {
    log "üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π..."
    
    local collections_response
    if collections_response=$(curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/collections"); then
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º–µ–Ω–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏–∑ JSON –æ—Ç–≤–µ—Ç–∞
        echo "${collections_response}" | jq -r '.result.collections[].name' 2>/dev/null || {
            warning "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–π"
            return 1
        }
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–π"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
backup_collection() {
    local collection_name="$1"
    local timestamp=$(date '+%Y%m%d_%H%M%S')
    local backup_file="${BACKUP_DIR}/${BACKUP_PREFIX}_${collection_name}_${timestamp}.json"
    local backup_file_gz="${backup_file}.gz"
    
    log "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ${collection_name}"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    local collection_info
    if collection_info=$(curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/collections/${collection_name}"); then
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        local points_response
        if points_response=$(curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/collections/${collection_name}/points/scroll" \
            -H "Content-Type: application/json" \
            -d '{"limit": 10000, "with_payload": true, "with_vector": true}'); then
            
            # –°–æ–∑–¥–∞–Ω–∏–µ JSON —Ñ–∞–π–ª–∞ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            {
                echo "{"
                echo "  \"collection_name\": \"${collection_name}\","
                echo "  \"backup_timestamp\": \"$(date -Iseconds)\","
                echo "  \"collection_info\": ${collection_info},"
                echo "  \"points\": ${points_response}"
                echo "}"
            } > "${backup_file}"
            
            # –°–∂–∞—Ç–∏–µ –±—ç–∫–∞–ø–∞
            if gzip "${backup_file}"; then
                success "‚úÖ –ë—ç–∫–∞–ø –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collection_name} —Å–æ–∑–¥–∞–Ω: ${backup_file_gz}"
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
                local file_size=$(du -h "${backup_file_gz}" | cut -f1)
                log "üìè –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: ${file_size}"
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
                if gzip -t "${backup_file_gz}"; then
                    success "‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –±—ç–∫–∞–ø–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
                else
                    error "‚ùå –ë—ç–∫–∞–ø –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!"
                    return 1
                fi
                
            else
                error "‚ùå –û—à–∏–±–∫–∞ —Å–∂–∞—Ç–∏—è –±—ç–∫–∞–ø–∞"
                return 1
            fi
            
        else
            error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—á–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collection_name}"
            return 1
        fi
        
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collection_name}"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞ Qdrant
backup_qdrant() {
    local timestamp=$(date '+%Y%m%d_%H%M%S')
    local backup_file="${BACKUP_DIR}/${BACKUP_PREFIX}_full_${timestamp}.json"
    local backup_file_gz="${backup_file}.gz"
    
    log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Qdrant..."
    log "üìÅ –§–∞–π–ª –±—ç–∫–∞–ø–∞: ${backup_file_gz}"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
    local collections
    if ! collections=$(get_collections); then
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–π"
        return 1
    fi
    
    if [ -z "${collections}" ]; then
        warning "‚ö†Ô∏è –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ JSON —Ñ–∞–π–ª–∞ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    {
        echo "{"
        echo "  \"backup_timestamp\": \"$(date -Iseconds)\","
        echo "  \"qdrant_host\": \"${QDRANT_HOST}\","
        echo "  \"qdrant_port\": ${QDRANT_PORT},"
        echo "  \"collections\": ["
        
        local first=true
        while IFS= read -r collection; do
            if [ -n "${collection}" ]; then
                if [ "${first}" = true ]; then
                    first=false
                else
                    echo ","
                fi
                
                log "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ${collection}"
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
                local collection_info
                collection_info=$(curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/collections/${collection}")
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
                local points_response
                points_response=$(curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/collections/${collection}/points/scroll" \
                    -H "Content-Type: application/json" \
                    -d '{"limit": 10000, "with_payload": true, "with_vector": true}')
                
                echo "    {"
                echo "      \"name\": \"${collection}\","
                echo "      \"info\": ${collection_info},"
                echo "      \"points\": ${points_response}"
                echo "    }"
            fi
        done <<< "${collections}"
        
        echo ""
        echo "  ]"
        echo "}"
    } > "${backup_file}"
    
    # –°–∂–∞—Ç–∏–µ –±—ç–∫–∞–ø–∞
    if gzip "${backup_file}"; then
        success "‚úÖ –ü–æ–ª–Ω—ã–π –±—ç–∫–∞–ø Qdrant —Å–æ–∑–¥–∞–Ω: ${backup_file_gz}"
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        local file_size=$(du -h "${backup_file_gz}" | cut -f1)
        log "üìè –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: ${file_size}"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
        if gzip -t "${backup_file_gz}"; then
            success "‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –±—ç–∫–∞–ø–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
        else
            error "‚ùå –ë—ç–∫–∞–ø –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!"
            return 1
        fi
        
    else
        error "‚ùå –û—à–∏–±–∫–∞ —Å–∂–∞—Ç–∏—è –±—ç–∫–∞–ø–∞"
        return 1
    fi
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
    cleanup_old_backups
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ Qdrant (–º–∞–∫—Å–∏–º—É–º ${MAX_BACKUPS} —Ñ–∞–π–ª–æ–≤)..."
    
    local backup_count=$(find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.json.gz" | wc -l)
    
    if [ "${backup_count}" -gt "${MAX_BACKUPS}" ]; then
        local files_to_delete=$((backup_count - MAX_BACKUPS))
        log "üóëÔ∏è –£–¥–∞–ª—è–µ–º ${files_to_delete} —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
        
        find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.json.gz" -type f -exec stat -c '%Y %n' {} \; | \
        sort -n | head -n "${files_to_delete}" | cut -d' ' -f2- | \
        while read -r file; do
            if rm -f "${file}"; then
                log "üóëÔ∏è –£–¥–∞–ª–µ–Ω: $(basename "${file}")"
            else
                warning "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: $(basename "${file}")"
            fi
        done
        
        success "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    else
        log "‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤ –≤ –Ω–æ—Ä–º–µ (${backup_count}/${MAX_BACKUPS})"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ –±—ç–∫–∞–ø–µ
create_backup_report() {
    local report_file="${BACKUP_DIR}/qdrant_backup_report_$(date '+%Y%m%d').txt"
    
    log "üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –±—ç–∫–∞–ø–∞—Ö Qdrant..."
    
    {
        echo "=== –û–¢–ß–ï–¢ –û –†–ï–ó–ï–†–í–ù–û–ú –ö–û–ü–ò–†–û–í–ê–ù–ò–ò QDRANT ==="
        echo "–î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "–°–∏—Å—Ç–µ–º–∞: Qdrant Vector Database"
        echo ""
        echo "=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–≠–ö–ê–ü–û–í ==="
        echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤: $(find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.json.gz" | wc -l)"
        echo "–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $(du -sh "${BACKUP_DIR}" | cut -f1)"
        echo ""
        echo "=== –ü–û–°–õ–ï–î–ù–ò–ï 5 –ë–≠–ö–ê–ü–û–í ==="
        find "${BACKUP_DIR}" -name "${BACKUP_PREFIX}_*.json.gz" -type f -exec stat -c '%Y %n %s' {} \; | \
        sort -n | tail -5 | while read -r timestamp file size; do
            echo "$(date -d "@${timestamp}" '+%Y-%m-%d %H:%M:%S') - $(basename "${file}") - $(numfmt --to=iec "${size}")"
        done
        echo ""
        echo "=== –°–¢–ê–¢–£–° –ö–û–õ–õ–ï–ö–¶–ò–ô ==="
        if collections=$(get_collections); then
            while IFS= read -r collection; do
                if [ -n "${collection}" ]; then
                    local collection_info
                    collection_info=$(curl -s "http://${QDRANT_HOST}:${QDRANT_PORT}/collections/${collection}" 2>/dev/null || echo '{"error": "unavailable"}')
                    local points_count=$(echo "${collection_info}" | jq -r '.result.points_count // "unknown"' 2>/dev/null || echo "unknown")
                    echo "–ö–æ–ª–ª–µ–∫—Ü–∏—è: ${collection} - –¢–æ—á–µ–∫: ${points_count}"
                fi
            done <<< "${collections}"
        else
            echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö"
        fi
    } > "${report_file}"
    
    success "‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${report_file}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ê–î–í–ê–ö–û–î Qdrant"
    log "==============================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if ! check_qdrant_connection; then
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Qdrant. –í—ã—Ö–æ–¥."
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    if backup_qdrant; then
        success "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Qdrant –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        create_backup_report
        
        log "üéâ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 130' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"
