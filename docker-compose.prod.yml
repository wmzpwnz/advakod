version: '3.8'

services:
  # PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
  postgres:
    image: postgres:15-alpine
    container_name: advakod_postgres
    environment:
      POSTGRES_DB: advakod_db
      POSTGRES_USER: advakod
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=ru_RU.UTF-8 --lc-ctype=ru_RU.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups  # –ü–∞–ø–∫–∞ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U advakod -d advakod_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - advakod_network
    shm_size: 1gb
    command: 
      - "postgres"
      - "-c" 
      - "shared_buffers=4GB"        # 10% –æ—Ç RAM (40GB)
      - "-c" 
      - "max_connections=200"       # –î–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
      - "-c"
      - "work_mem=32MB"             # –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ RAG
      - "-c"
      - "maintenance_work_mem=1GB"  # –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
      - "-c"
      - "effective_cache_size=12GB" # –î–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"

  # Qdrant –≤–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: advakod_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC –ø–æ—Ä—Ç
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - advakod_network

  # Redis –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
  redis:
    image: redis:7-alpine
    container_name: advakod_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - advakod_network
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 4gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --loglevel notice
      --timeout 300
      --tcp-keepalive 60

  # Backend —Å Vistral-24B-Instruct
  backend:
    build: ./backend
    container_name: advakod_backend
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://advakod:${POSTGRES_PASSWORD}@postgres:5432/advakod_db
      - REDIS_URL=redis://redis:6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - VISTRAL_MODEL_PATH=/opt/advakod/models/vistral/Vistral-24B-Instruct-Q5_0.gguf
      - VISTRAL_N_CTX=4096
      - VISTRAL_N_THREADS=8           # ‚¨áÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å 2 —è–¥—Ä–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
      - VISTRAL_MAX_CONCURRENCY=2     # ‚¨áÔ∏è –ú–∞–∫—Å–∏–º—É–º 2 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞
      - VISTRAL_INFERENCE_TIMEOUT=180      # ‚¨áÔ∏è –£–º–µ–Ω—å—à–∏—Ç—å —Ç–∞–π–º–∞—É—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - BACKEND_CORS_ORIGINS=https://advacodex.com,https://www.advacodex.com
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - QDRANT_COLLECTION_NAME=legal_documents
      - VISTRAL_N_GPU_LAYERS=0
      - VISTRAL_TOKEN_MARGIN=128
      - VISTRAL_REPEAT_PENALTY=1.1
      - VISTRAL_TEMPERATURE=0.3
      - VISTRAL_TOP_P=0.8
      - VISTRAL_STOP_TOKENS=""
      - LOG_PROMPTS=false
      - ACCESS_TOKEN_EXPIRE_MINUTES=240
      - CACHE_TTL_DEFAULT=3600
      - CACHE_TTL_AI_RESPONSE=7200
      - CACHE_TTL_USER_PROFILE=1800
      - AI_DOCUMENT_ANALYSIS_TIMEOUT=180
      - AI_CHAT_RESPONSE_TIMEOUT=90
      - AI_COMPLEX_ANALYSIS_TIMEOUT=300
      - AI_EMBEDDINGS_TIMEOUT=30
      - AI_DOCUMENT_ANALYSIS_TOKENS=3000
      - AI_CHAT_RESPONSE_TOKENS=1500
      - AI_COMPLEX_ANALYSIS_TOKENS=2500
      - AI_EMBEDDINGS_TOKENS=500
      - TRUSTED_HOSTS=localhost,127.0.0.1,advakod_backend,advacodex.com,*.advacodex.com
    volumes:
      - ./backend:/app
      - /opt/advakod/models:/opt/advakod/models:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - qdrant
    restart: unless-stopped
    networks:
      - advakod_network
    deploy:
      resources:
        limits:
          memory: 28G  # –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–º—è—Ç—å –¥–ª—è Vistral 24B
        reservations:
          memory: 24G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s           # ‚¨ÜÔ∏è –£–≤–µ–ª–∏—á–∏—Ç—å –¥–ª—è Vistral 24B
      retries: 3
      start_period: 300s     # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ Vistral 24B (5 –º–∏–Ω—É—Ç)

  # Frontend (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π build —á–µ—Ä–µ–∑ Nginx)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: advakod_frontend
    environment:
      - REACT_APP_API_URL=https://advacodex.com/api/v1
      - REACT_APP_WS_URL=wss://advacodex.com/ws
    restart: unless-stopped
    networks:
      - advakod_network

  # Nginx –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
  nginx:
    image: nginx:alpine
    container_name: advakod_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Let's Encrypt
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - advakod_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # –°–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  backup:
    image: alpine:latest
    container_name: advakod_backup
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BACKUP_SCHEDULE=0 2 * * *  # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 2:00
    command: >
      sh -c "
        apk add --no-cache curl jq bc bash docker-cli postgresql-client;
        chmod +x /scripts/*.sh;
        echo 'üöÄ Backup service started';
        while true; do
          sleep 3600;
          echo '‚è∞ Running scheduled backup...';
          /scripts/backup_all.sh || echo '‚ùå Backup failed';
        done
      "
    restart: unless-stopped
    networks:
      - advakod_network
    depends_on:
      - postgres
      - qdrant
      - redis

volumes:
  postgres_data:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local

networks:
  advakod_network:
    driver: bridge